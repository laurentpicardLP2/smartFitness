-- MySQL Script generated by MySQL Workbench
-- lun. 29 avril 2019 21:24:34 CEST
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema db_fitness
-- -----------------------------------------------------
-- Base de données servant de support au projet chef-d'oeuvre
DROP SCHEMA IF EXISTS `db_fitness` ;

-- -----------------------------------------------------
-- Schema db_fitness
--
-- Base de données servant de support au projet chef-d'oeuvre
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `db_fitness` DEFAULT CHARACTER SET utf8 COLLATE utf8_bin ;
USE `db_fitness` ;

-- -----------------------------------------------------
-- Table `db_fitness`.`Customer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_fitness`.`Customer` (
  `Users_username` VARCHAR(45) NOT NULL,
  `domesticAddress` VARCHAR(255) NOT NULL,
  `domesticCp` VARCHAR(15) NOT NULL,
  `domesticCity` VARCHAR(45) NOT NULL,
  `domesticCountry` VARCHAR(45) NOT NULL,
  `deliveryAddress` VARCHAR(255) NOT NULL,
  `deliveryCp` VARCHAR(45) NOT NULL,
  `deliveryCity` VARCHAR(45) NOT NULL,
  `deliveryCountry` VARCHAR(45) NOT NULL,
  `dateOfBirthday` DATE NULL,
  PRIMARY KEY (`Users_username`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_fitness`.`Staff`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_fitness`.`Staff` (
  `Users_username` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Users_username`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_fitness`.`Users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_fitness`.`Users` (
  `username` VARCHAR(45) NOT NULL,
  `idUser` INT NOT NULL,
  `fullname` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `tel` VARCHAR(15) NULL,
  `dateOfRegistration` DATE NOT NULL,
  `Customer_Users_username` VARCHAR(45) NULL,
  `Staff_Users_username` VARCHAR(45) NULL,
  PRIMARY KEY (`username`),
  CONSTRAINT `fk_Users_Customer1`
    FOREIGN KEY (`Customer_Users_username`)
    REFERENCES `db_fitness`.`Customer` (`Users_username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Users_Staff1`
    FOREIGN KEY (`Staff_Users_username`)
    REFERENCES `db_fitness`.`Staff` (`Users_username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `email_UNIQUE` ON `db_fitness`.`Users` (`email` ASC);

CREATE UNIQUE INDEX `idUser_UNIQUE` ON `db_fitness`.`Users` (`idUser` ASC);

CREATE INDEX `fk_Users_Customer1_idx` ON `db_fitness`.`Users` (`Customer_Users_username` ASC);

CREATE INDEX `fk_Users_Staff1_idx` ON `db_fitness`.`Users` (`Staff_Users_username` ASC);


-- -----------------------------------------------------
-- Table `db_fitness`.`Authorities`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_fitness`.`Authorities` (
  `Users_username` VARCHAR(45) NOT NULL,
  `authority` VARCHAR(45) NOT NULL DEFAULT 'ROLE_ANONYMOUS',
  `username` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Users_username`),
  CONSTRAINT `fk_Authorities_Users1`
    FOREIGN KEY (`Users_username`)
    REFERENCES `db_fitness`.`Users` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_fitness`.`SubscriptionCategory`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_fitness`.`SubscriptionCategory` (
  `idSubscriptionCategory` INT NOT NULL,
  `nameSubscription` VARCHAR(45) NOT NULL,
  `nbLast` INT NOT NULL,
  `typeLast` VARCHAR(45) NULL,
  `priceSubscription` FLOAT NOT NULL,
  PRIMARY KEY (`idSubscriptionCategory`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_fitness`.`Subscription`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_fitness`.`Subscription` (
  `idSubscriptionType` INT NOT NULL,
  `Customer_Users_username` VARCHAR(45) NOT NULL,
  `SubscriptionCategory_idSubscriptionCategory` INT NOT NULL,
  `dateStartOfSubscription` DATE NULL,
  `dateEndOfSubscription` DATE NULL,
  PRIMARY KEY (`idSubscriptionType`),
  CONSTRAINT `fk_Subscription_Customer1`
    FOREIGN KEY (`Customer_Users_username`)
    REFERENCES `db_fitness`.`Customer` (`Users_username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Subscription_SubscriptionCategory1`
    FOREIGN KEY (`SubscriptionCategory_idSubscriptionCategory`)
    REFERENCES `db_fitness`.`SubscriptionCategory` (`idSubscriptionCategory`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Subscription_Customer1_idx` ON `db_fitness`.`Subscription` (`Customer_Users_username` ASC);

CREATE INDEX `fk_Subscription_SubscriptionCategory1_idx` ON `db_fitness`.`Subscription` (`SubscriptionCategory_idSubscriptionCategory` ASC);


-- -----------------------------------------------------
-- Table `db_fitness`.`ProductCategory`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_fitness`.`ProductCategory` (
  `idProductCategory` INT NOT NULL AUTO_INCREMENT,
  `nameProductCategory` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idProductCategory`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `nameProductCategory_UNIQUE` ON `db_fitness`.`ProductCategory` (`nameProductCategory` ASC);


-- -----------------------------------------------------
-- Table `db_fitness`.`Room`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_fitness`.`Room` (
  `idRoom` INT NOT NULL,
  `capacityRoom` INT NOT NULL,
  `nameRoom` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idRoom`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_fitness`.`FacilityCategory`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_fitness`.`FacilityCategory` (
  `idFacilityCategory` INT NOT NULL,
  `nameFacilityategory` VARCHAR(45) NOT NULL,
  `quantityFacilityCategory` INT NOT NULL,
  PRIMARY KEY (`idFacilityCategory`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_fitness`.`Facility`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_fitness`.`Facility` (
  `idFacility` INT NOT NULL,
  `nameFacility` VARCHAR(45) NOT NULL,
  `priceSeance` FLOAT NOT NULL DEFAULT 0,
  `priceFacility` FLOAT NULL,
  `dateOfPurchase` DATE NULL,
  `Room_idRoom` INT NOT NULL,
  `descriptionFacility` VARCHAR(45) NOT NULL,
  `imageFacility` VARCHAR(45) NULL,
  `FacilityCategory_idFacilityCategory` INT NOT NULL,
  PRIMARY KEY (`idFacility`),
  CONSTRAINT `fk_Equipement_Room1`
    FOREIGN KEY (`Room_idRoom`)
    REFERENCES `db_fitness`.`Room` (`idRoom`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Facility_FacilityCategory1`
    FOREIGN KEY (`FacilityCategory_idFacilityCategory`)
    REFERENCES `db_fitness`.`FacilityCategory` (`idFacilityCategory`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Equipement_Room1_idx` ON `db_fitness`.`Facility` (`Room_idRoom` ASC);

CREATE UNIQUE INDEX `nameMaterial_UNIQUE` ON `db_fitness`.`Facility` (`nameFacility` ASC);

CREATE INDEX `fk_Facility_FacilityCategory1_idx` ON `db_fitness`.`Facility` (`FacilityCategory_idFacilityCategory` ASC);


-- -----------------------------------------------------
-- Table `db_fitness`.`Seance`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_fitness`.`Seance` (
  `idSeance` INT NOT NULL,
  `Customer_Users_username` VARCHAR(45) NOT NULL,
  `statusSeance` INT NULL DEFAULT 0,
  `dateOfSeance` DATETIME NULL,
  `nbTimestamp` INT NULL,
  PRIMARY KEY (`idSeance`),
  CONSTRAINT `fk_Seance_Customer1`
    FOREIGN KEY (`Customer_Users_username`)
    REFERENCES `db_fitness`.`Customer` (`Users_username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Seance_Customer1_idx` ON `db_fitness`.`Seance` (`Customer_Users_username` ASC);


-- -----------------------------------------------------
-- Table `db_fitness`.`ProductRef`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_fitness`.`ProductRef` (
  `idProductRef` INT NOT NULL AUTO_INCREMENT,
  `nameProductRef` VARCHAR(45) NOT NULL,
  `priceProductRef` FLOAT NOT NULL,
  `descriptionProductRef` VARCHAR(255) NULL,
  `imageProductRef` VARCHAR(45) NULL,
  `ProductCategory_idProductCategory` INT NOT NULL,
  PRIMARY KEY (`idProductRef`),
  CONSTRAINT `fk_Product_ProductCategory1`
    FOREIGN KEY (`ProductCategory_idProductCategory`)
    REFERENCES `db_fitness`.`ProductCategory` (`idProductCategory`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Product_ProductCategory1_idx` ON `db_fitness`.`ProductRef` (`ProductCategory_idProductCategory` ASC);

CREATE UNIQUE INDEX `nameProductRef_UNIQUE` ON `db_fitness`.`ProductRef` (`nameProductRef` ASC);


-- -----------------------------------------------------
-- Table `db_fitness`.`Product`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_fitness`.`Product` (
  `idProduct` INT NOT NULL AUTO_INCREMENT,
  `ProductRef_idProductRef` INT NOT NULL,
  PRIMARY KEY (`idProduct`),
  CONSTRAINT `fk_Product_ProductRef1`
    FOREIGN KEY (`ProductRef_idProductRef`)
    REFERENCES `db_fitness`.`ProductRef` (`idProductRef`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Product_ProductRef1_idx` ON `db_fitness`.`Product` (`ProductRef_idProductRef` ASC);


-- -----------------------------------------------------
-- Table `db_fitness`.`Item`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_fitness`.`Item` (
  `idItem` INT NOT NULL,
  `typeItem` VARCHAR(45) NOT NULL,
  `quantityItem` INT NOT NULL,
  `price` FLOAT NOT NULL,
  `Subscription_idSubscriptionType` INT NULL,
  `Seance_idSeance` INT NULL,
  `Product_idProduct` INT NULL,
  PRIMARY KEY (`idItem`),
  CONSTRAINT `fk_Prestation_Subscription1`
    FOREIGN KEY (`Subscription_idSubscriptionType`)
    REFERENCES `db_fitness`.`Subscription` (`idSubscriptionType`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Purchase_Seance1`
    FOREIGN KEY (`Seance_idSeance`)
    REFERENCES `db_fitness`.`Seance` (`idSeance`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Item_Product1`
    FOREIGN KEY (`Product_idProduct`)
    REFERENCES `db_fitness`.`Product` (`idProduct`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Prestation_Subscription1_idx` ON `db_fitness`.`Item` (`Subscription_idSubscriptionType` ASC);

CREATE INDEX `fk_Purchase_Seance1_idx` ON `db_fitness`.`Item` (`Seance_idSeance` ASC);

CREATE INDEX `fk_Item_Product1_idx` ON `db_fitness`.`Item` (`Product_idProduct` ASC);


-- -----------------------------------------------------
-- Table `db_fitness`.`Command`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_fitness`.`Command` (
  `idCommand` INT NOT NULL,
  `dateOfCommand` DATETIME NOT NULL,
  `totalPrice` FLOAT NOT NULL,
  `statusCommand` INT NOT NULL DEFAULT 0,
  `Customer_Users_username` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idCommand`),
  CONSTRAINT `fk_Command_Customer1`
    FOREIGN KEY (`Customer_Users_username`)
    REFERENCES `db_fitness`.`Customer` (`Users_username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Command_Customer1_idx` ON `db_fitness`.`Command` (`Customer_Users_username` ASC);


-- -----------------------------------------------------
-- Table `db_fitness`.`TimestampFacility`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_fitness`.`TimestampFacility` (
  `idTimestampFacility` INT NOT NULL AUTO_INCREMENT,
  `dateOfTimestamp` DATETIME NOT NULL,
  `Facility_idFacility` INT NOT NULL,
  `Seance_idSeance` INT NOT NULL,
  `FacilityCategory_idFacilityCategory` INT NOT NULL,
  PRIMARY KEY (`idTimestampFacility`),
  CONSTRAINT `fk_TimestampFacility_Facility1`
    FOREIGN KEY (`Facility_idFacility`)
    REFERENCES `db_fitness`.`Facility` (`idFacility`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_TimestampFacility_Seance1`
    FOREIGN KEY (`Seance_idSeance`)
    REFERENCES `db_fitness`.`Seance` (`idSeance`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_TimestampFacility_FacilityCategory1`
    FOREIGN KEY (`FacilityCategory_idFacilityCategory`)
    REFERENCES `db_fitness`.`FacilityCategory` (`idFacilityCategory`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_TimestampFacility_Facility1_idx` ON `db_fitness`.`TimestampFacility` (`Facility_idFacility` ASC);

CREATE INDEX `fk_TimestampFacility_Seance1_idx` ON `db_fitness`.`TimestampFacility` (`Seance_idSeance` ASC);

CREATE INDEX `fk_TimestampFacility_FacilityCategory1_idx` ON `db_fitness`.`TimestampFacility` (`FacilityCategory_idFacilityCategory` ASC);


-- -----------------------------------------------------
-- Table `db_fitness`.`Command_has_Item`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_fitness`.`Command_has_Item` (
  `Command_idCommand` INT NOT NULL,
  `Item_idItem` INT NOT NULL,
  PRIMARY KEY (`Command_idCommand`, `Item_idItem`),
  CONSTRAINT `fk_Command_has_Item_Command1`
    FOREIGN KEY (`Command_idCommand`)
    REFERENCES `db_fitness`.`Command` (`idCommand`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Command_has_Item_Item1`
    FOREIGN KEY (`Item_idItem`)
    REFERENCES `db_fitness`.`Item` (`idItem`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Command_has_Item_Item1_idx` ON `db_fitness`.`Command_has_Item` (`Item_idItem` ASC);

CREATE INDEX `fk_Command_has_Item_Command1_idx` ON `db_fitness`.`Command_has_Item` (`Command_idCommand` ASC);


-- -----------------------------------------------------
-- Table `db_fitness`.`MaintenanceOperation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_fitness`.`MaintenanceOperation` (
  `idMaintenanceOperation` INT NOT NULL AUTO_INCREMENT,
  `dateOfIntervention` DATETIME NULL,
  `typeOfIntervention` VARCHAR(45) NULL,
  `DescOfIntervention` VARCHAR(255) NULL,
  `costOfIntervention` FLOAT NULL,
  PRIMARY KEY (`idMaintenanceOperation`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_fitness`.`Facility_has_MaintenanceOperation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_fitness`.`Facility_has_MaintenanceOperation` (
  `Facility_idFacility` INT NOT NULL,
  `MaintenanceOperation_idMaintenanceOperation` INT NOT NULL,
  PRIMARY KEY (`Facility_idFacility`, `MaintenanceOperation_idMaintenanceOperation`),
  CONSTRAINT `fk_Facility_has_MaintenanceOperation_Facility1`
    FOREIGN KEY (`Facility_idFacility`)
    REFERENCES `db_fitness`.`Facility` (`idFacility`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Facility_has_MaintenanceOperation_MaintenanceOperation1`
    FOREIGN KEY (`MaintenanceOperation_idMaintenanceOperation`)
    REFERENCES `db_fitness`.`MaintenanceOperation` (`idMaintenanceOperation`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Facility_has_MaintenanceOperation_MaintenanceOperation1_idx` ON `db_fitness`.`Facility_has_MaintenanceOperation` (`MaintenanceOperation_idMaintenanceOperation` ASC);

CREATE INDEX `fk_Facility_has_MaintenanceOperation_Facility1_idx` ON `db_fitness`.`Facility_has_MaintenanceOperation` (`Facility_idFacility` ASC);


-- -----------------------------------------------------
-- Table `db_fitness`.`Evenement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_fitness`.`Evenement` (
  `idEvt` INT NOT NULL AUTO_INCREMENT,
  `titleEvt` VARCHAR(75) NOT NULL,
  `descriptionEvt` VARCHAR(255) NULL,
  `imageEvt` VARCHAR(45) NULL,
  `videoEvt` VARCHAR(255) NULL,
  `startDateTimeEvt` DATETIME NOT NULL,
  `endDateTimeEvt` DATETIME NOT NULL,
  PRIMARY KEY (`idEvt`))
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
