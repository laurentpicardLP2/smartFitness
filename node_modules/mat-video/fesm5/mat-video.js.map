{"version":3,"file":"mat-video.js.map","sources":["ng://mat-video/app/video/services/event.service.ts","ng://mat-video/app/video/video.component.ts","ng://mat-video/app/video/directives/mat-video-source.directive.ts","ng://mat-video/app/video/directives/mat-video-track.directive.ts","ng://mat-video/app/video/internal/mat-slider-progress-bar/mat-slider-progress-bar.component.ts","ng://mat-video/app/video/pipes/seconds-to-time.pipe.ts","ng://mat-video/app/video/services/fullscreen.service.ts","ng://mat-video/app/video/ui/mat-download-button/mat-download-button.component.ts","ng://mat-video/app/video/ui/mat-fullscreen-button/mat-fullscreen-button.component.ts","ng://mat-video/app/video/ui/mat-play-button/mat-play-button.component.ts","ng://mat-video/app/video/ui/mat-quality-control/mat-quality-control.component.ts","ng://mat-video/app/video/ui/mat-seek-progress-control/mat-seek-progress-control.component.ts","ng://mat-video/app/video/ui/mat-time-control/mat-time-control.component.ts","ng://mat-video/app/video/ui/mat-video-spinner/mat-video-spinner.component.ts","ng://mat-video/app/video/ui/mat-volume-control/mat-volume-control.component.ts","ng://mat-video/app/video/video.module.ts"],"sourcesContent":["import { Injectable, Renderer2 } from '@angular/core';\r\nimport { EventHandler } from '../interfaces/event-handler.interface';\r\n\r\n@Injectable()\r\nexport class EventService {\r\n\r\n    constructor() { }\r\n\r\n    addEvents(renderer: Renderer2, events: EventHandler[]): void {\r\n        for (const event of events)\r\n            event.dispose = renderer.listen(event.element, event.name, newEvent => event.callback(newEvent));\r\n    }\r\n\r\n    removeEvents(events: EventHandler[]): void {\r\n        for (const event of events)\r\n            if (event.dispose)\r\n                event.dispose();\r\n    }\r\n\r\n}\r\n","import { AfterViewInit, Component, ElementRef, Input, OnDestroy, Renderer2, ViewChild } from '@angular/core';\r\nimport { ThemePalette } from '@angular/material';\r\n\r\nimport { EventHandler } from './interfaces/event-handler.interface';\r\nimport { EventService } from './services/event.service';\r\n\r\n@Component({\r\n    selector: 'mat-video',\r\n    templateUrl: './video.component.html',\r\n    styleUrls: ['./video.component.css', './styles/icons.css']\r\n})\r\nexport class MatVideoComponent implements AfterViewInit, OnDestroy {\r\n    @ViewChild('player') private player: ElementRef;\r\n    @ViewChild('video') private video: ElementRef;\r\n\r\n    @Input() src: string = null;\r\n    @Input() title: string = null;\r\n    @Input() autoplay: boolean = false;\r\n    @Input() preload: boolean = true;\r\n    @Input() loop: boolean = false;\r\n    @Input() quality: boolean = true;\r\n    @Input() fullscreen: boolean = true;\r\n    @Input() download: boolean = false;\r\n    @Input() color: ThemePalette = 'primary';\r\n    @Input() spinner: string = 'spin';\r\n    @Input() poster: string = null;\r\n    @Input() keyboard: boolean = true;\r\n    @Input() overlay: boolean = null;\r\n\r\n    playing: boolean = false;\r\n\r\n    isFullscreen: boolean = false;\r\n\r\n    videoWidth: number;\r\n    videoHeight: number;\r\n\r\n    videoLoaded = false;\r\n\r\n    private isMouseMoving: boolean = false;\r\n    private isMouseMovingTimer: NodeJS.Timer;\r\n    private isMouseMovingTimeout: number = 2000;\r\n\r\n    private events: EventHandler[];\r\n\r\n    constructor(\r\n        private renderer: Renderer2,\r\n        private evt: EventService\r\n    ) { }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.events = [\r\n            { element: this.video.nativeElement, name: 'loadstart', callback: event => this.videoLoaded = false, dispose: null },\r\n            { element: this.video.nativeElement, name: 'loadedmetadata', callback: event => this.evLoadedMetadata(event), dispose: null },\r\n            { element: this.video.nativeElement, name: 'error', callback: event => console.error('Unhandled Video Error', event), dispose: null },\r\n            { element: this.video.nativeElement, name: 'contextmenu', callback: event => event.preventDefault(), dispose: null },\r\n            { element: this.player.nativeElement, name: 'mousemove', callback: event => this.evMouseMove(event), dispose: null }\r\n        ];\r\n\r\n        this.evt.addEvents(this.renderer, this.events);\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.evt.removeEvents(this.events);\r\n    }\r\n\r\n    load(): void {\r\n        if (this.video && this.video.nativeElement)\r\n            this.video.nativeElement.load();\r\n    }\r\n\r\n    getVideoTag(): HTMLVideoElement | null {\r\n        return this.video && this.video.nativeElement ? this.video.nativeElement as HTMLVideoElement : null;\r\n    }\r\n\r\n    evLoadedMetadata(event: any): void {\r\n        this.videoWidth = this.video.nativeElement.videoWidth;\r\n        this.videoHeight = this.video.nativeElement.videoHeight;\r\n        this.videoLoaded = true;\r\n    }\r\n\r\n    evMouseMove(event: any): void {\r\n        this.isMouseMoving = true;\r\n        clearTimeout(this.isMouseMovingTimer);\r\n        this.isMouseMovingTimer = setTimeout(() => {\r\n            this.isMouseMoving = false;\r\n        }, this.isMouseMovingTimeout);\r\n    }\r\n\r\n    getOverlayClass(activeClass: string, inactiveClass: string): any {\r\n        if (this.overlay === null) {\r\n            return (!this.playing || this.isMouseMoving) ? activeClass : inactiveClass;\r\n        } else {\r\n            return this.overlay ? activeClass : inactiveClass;\r\n        }\r\n    }\r\n\r\n}\r\n","import { Directive, ElementRef, Host, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { MatVideoComponent } from '../video.component';\n\n@Directive({\n  selector: '[matVideoSource]'\n})\nexport class MatVideoSourceDirective implements OnChanges {\n  @Input() src: string = null;\n  @Input() type: string = null;\n\n  private init = true;\n  private video: MatVideoComponent;\n  private source: HTMLSourceElement;\n\n  constructor(\n    @Host() private matVideoComponent: MatVideoComponent,\n    private el: ElementRef\n  ) {\n    this.video = matVideoComponent;\n    this.source = el.nativeElement;\n    this.init = false;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.source.src = this.src;\n    this.source.type = this.type;\n\n    if (!this.init)\n      this.video.load();\n  }\n\n}\n","import { Directive, ElementRef, Host, Input, OnChanges, SimpleChanges } from '@angular/core';\r\n\r\nimport { MatVideoComponent } from '../video.component';\r\n\r\n@Directive({\r\n    selector: '[matVideoTrack]'\r\n})\r\nexport class MatVideoTrackDirective implements OnChanges {\r\n    @Input() src: string = null;\r\n    @Input() kind: string = null;\r\n    @Input() srclang: string = null;\r\n    @Input() label: string = null;\r\n\r\n    private init = true;\r\n    private video: MatVideoComponent;\r\n    private track: HTMLTrackElement;\r\n\r\n    constructor(\r\n        @Host() private matVideoComponent: MatVideoComponent,\r\n        private el: ElementRef\r\n    ) {\r\n        this.video = matVideoComponent;\r\n        this.track = el.nativeElement;\r\n        this.init = false;\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        this.track.src = this.src;\r\n        this.track.kind = this.kind;\r\n        this.track.srclang = this.srclang;\r\n        this.track.label = this.label;\r\n\r\n        if (!this.init)\r\n            this.video.load();\r\n    }\r\n\r\n}\r\n","import { Component, Input, Output, EventEmitter, ElementRef, ChangeDetectorRef, ViewEncapsulation, ChangeDetectionStrategy, Optional, Attribute } from '@angular/core';\r\nimport { MatSlider, MAT_SLIDER_VALUE_ACCESSOR } from '@angular/material';\r\nimport { FocusMonitor } from '@angular/cdk/a11y';\r\nimport { Directionality } from '@angular/cdk/bidi';\r\n\r\n/** Counter used to generate unique IDs for progress bars. */\r\nlet sliderprogressbarId = 0;\r\n\r\n@Component({\r\n    selector: 'mat-slider-progress-bar',\r\n    templateUrl: './mat-slider-progress-bar.component.html',\r\n    styleUrls: ['./mat-slider-progress-bar.component.css'],\r\n    providers: [MAT_SLIDER_VALUE_ACCESSOR],\r\n    host: {\r\n        '(focus)': '_onFocus()',\r\n        '(blur)': '_onBlur()',\r\n        '(click)': 'this[\"_onClick\"] ? this[\"_onClick\"]($event) : null', // Angular 5/6 support\r\n        '(mousedown)': 'this[\"_onMousedown\"] ? this[\"_onMousedown\"]($event) : null', // Angular 7 support\r\n        '(keydown)': '_onKeydown($event)',\r\n        '(keyup)': '_onKeyup()',\r\n        '(mouseenter)': '_onMouseenter()',\r\n        '(slide)': '_onSlide($event)',\r\n        '(slideend)': '_onSlideEnd()',\r\n        '(slidestart)': '_onSlideStart($event)',\r\n        'class': 'mat-slider',\r\n        'role': 'slider',\r\n        '[tabIndex]': 'tabIndex',\r\n        '[attr.aria-disabled]': 'disabled',\r\n        '[attr.aria-valuemax]': 'max',\r\n        '[attr.aria-valuemin]': 'min',\r\n        '[attr.aria-valuenow]': 'value',\r\n        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\r\n        '[class.mat-slider-disabled]': 'disabled',\r\n        '[class.mat-slider-has-ticks]': 'tickInterval',\r\n        '[class.mat-slider-horizontal]': '!vertical',\r\n        '[class.mat-slider-axis-inverted]': '_invertAxis',\r\n        '[class.mat-slider-sliding]': '_isSliding',\r\n        '[class.mat-slider-thumb-label-showing]': 'thumbLabel',\r\n        '[class.mat-slider-vertical]': 'vertical',\r\n        '[class.mat-slider-min-value]': '_isMinValue',\r\n        '[class.mat-slider-hide-last-tick]': 'disabled || _isMinValue && _thumbGap && _invertAxis',\r\n    },\r\n    inputs: ['disabled', 'color', 'tabIndex'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\n\r\nexport class MatSliderProgressBarComponent extends MatSlider {\r\n    @Input() mode: string = 'buffer';\r\n    @Input() value: number = 0;\r\n    /** Buffer value of the progress bar. Defaults to zero. */\r\n    @Input()\r\n    get bufferValue(): number { return this._bufferValue; }\r\n    set bufferValue(v: number) { this._bufferValue = clamp(v || 0); }\r\n    private _bufferValue: number = 0;\r\n\r\n    /** The id of the progress bar. */\r\n    sliderprogressbarId = `mat-slider-progress-bar-${sliderprogressbarId++}`;\r\n\r\n    constructor(\r\n        elementRef: ElementRef,\r\n        focusMonitor: FocusMonitor,\r\n        changeDetectorRef: ChangeDetectorRef,\r\n        @Optional() dir: Directionality,\r\n        @Attribute('tabindex') tabIndex: string\r\n    ) {\r\n        super(elementRef, focusMonitor, changeDetectorRef, dir, tabIndex);\r\n        this.tabIndex = parseInt(tabIndex) || 0;\r\n    }\r\n\r\n    /** CSS styles for the track fill element. */\r\n    get _trackBufferStyles(): { [key: string]: string } {\r\n        if (this.mode === 'buffer') {\r\n            const axis = this.vertical ? 'Y' : 'X';\r\n            return {\r\n                'transform': `translate${axis}(0px) scale${axis}(${this._bufferValue / 100})`\r\n            };\r\n        }\r\n    }\r\n}\r\n\r\n/** Clamps a value to be between two numbers, by default 0 and 100. */\r\nfunction clamp(v: number, min = 0, max = 100) {\r\n    return Math.max(min, Math.min(max, v));\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'secondsToTime'\r\n})\r\nexport class SecondsToTimePipe implements PipeTransform {\r\n    times = {\r\n        year: 31557600,\r\n        month: 2629746,\r\n        day: 86400,\r\n        hour: 3600,\r\n    };\r\n\r\n    transform(seconds: number) {\r\n        if (!seconds)\r\n            return '0:00';\r\n        else {\r\n            let time_string: string = '';\r\n            for (const key in this.times) {\r\n                if (Math.floor(seconds / this.times[key]) > 0) {\r\n                    time_string += Math.floor(seconds / this.times[key]).toString() + ':';\r\n                    seconds = seconds - this.times[key] * Math.floor(seconds / this.times[key]);\r\n                }\r\n            }\r\n            time_string += Math.floor(seconds / 60).toString() + ':';\r\n            seconds = seconds - 60 * Math.floor(seconds / 60);\r\n            if (Math.floor(seconds) < 10) time_string += '0';\r\n            time_string += Math.floor(seconds).toString();\r\n            return time_string;\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FullscreenControls } from '../interfaces/fullscreen-controls.interface';\r\n\r\n@Injectable()\r\nexport class FullscreenService {\r\n\r\n    private fnMap: string[][] = [\r\n        // Object keys\r\n        [\r\n            'requestFullscreen',\r\n            'exitFullscreen',\r\n            'fullscreenElement',\r\n            'fullscreenEnabled',\r\n            'fullscreenchange',\r\n            'fullscreenerror'\r\n        ],\r\n        // New WebKit\r\n        [\r\n            'webkitRequestFullscreen',\r\n            'webkitExitFullscreen',\r\n            'webkitFullscreenElement',\r\n            'webkitFullscreenEnabled',\r\n            'webkitfullscreenchange',\r\n            'webkitfullscreenerror'\r\n\r\n        ],\r\n        // Old WebKit (Safari 5.1)\r\n        [\r\n            'webkitRequestFullScreen',\r\n            'webkitCancelFullScreen',\r\n            'webkitCurrentFullScreenElement',\r\n            'webkitCancelFullScreen',\r\n            'webkitfullscreenchange',\r\n            'webkitfullscreenerror'\r\n\r\n        ],\r\n        // Mozilla\r\n        [\r\n            'mozRequestFullScreen',\r\n            'mozCancelFullScreen',\r\n            'mozFullScreenElement',\r\n            'mozFullScreenEnabled',\r\n            'mozfullscreenchange',\r\n            'mozfullscreenerror'\r\n        ],\r\n        // MS\r\n        [\r\n            'msRequestFullscreen',\r\n            'msExitFullscreen',\r\n            'msFullscreenElement',\r\n            'msFullscreenEnabled',\r\n            'MSFullscreenChange',\r\n            'MSFullscreenError'\r\n        ]\r\n    ];\r\n\r\n    private fn: FullscreenControls;\r\n    private keyboardAllowed: boolean;\r\n\r\n    constructor() {\r\n        this.keyboardAllowed = typeof Element !== 'undefined' && 'ALLOW_KEYBOARD_INPUT' in Element;\r\n        const ret: any = {};\r\n        let val;\r\n\r\n        for (let i = 0; i < this.fnMap.length; i++) {\r\n            val = this.fnMap[i];\r\n            if (val && val[1] in document) {\r\n                for (i = 0; i < val.length; i++) {\r\n                    // Map everything to the first list of keys\r\n                    ret[this.fnMap[0][i].toString()] = val[i];\r\n                }\r\n                this.fn = ret;\r\n            }\r\n        }\r\n    }\r\n\r\n    public request(elem: any) {\r\n        const request = this.fn.requestFullscreen;\r\n\r\n        elem = elem || document.documentElement;\r\n\r\n        // Work around Safari 5.1 bug: reports support for\r\n        // keyboard in fullscreen even though it doesn't.\r\n        // Browser sniffing, since the alternative with\r\n        // setTimeout is even worse.\r\n        if (/5\\.1[.\\d]* Safari/.test(navigator.userAgent)) {\r\n            elem[request]();\r\n        } else {\r\n            elem[request](this.keyboardAllowed ? (Element as any).ALLOW_KEYBOARD_INPUT : {});\r\n        }\r\n    }\r\n\r\n    public exit() {\r\n        document[this.fn.exitFullscreen]();\r\n    }\r\n\r\n    public toggle(elem: any) {\r\n        if (this.isFullscreen()) {\r\n            this.exit();\r\n        } else {\r\n            this.request(elem);\r\n        }\r\n    }\r\n\r\n    public onChange(callback: any) {\r\n        document.addEventListener(this.fn.fullscreenchange, callback, false);\r\n    }\r\n\r\n    public onError(callback: any) {\r\n        document.addEventListener(this.fn.fullscreenerror, callback, false);\r\n    }\r\n\r\n    public isFullscreen() {\r\n        return Boolean(document[this.fn.fullscreenElement]);\r\n    }\r\n\r\n    public isEnabled() {\r\n        // Coerce to boolean in case of old WebKit\r\n        return Boolean(document[this.fn.fullscreenEnabled]);\r\n    }\r\n\r\n    public getElement() {\r\n        return document[this.fn.fullscreenElement];\r\n    }\r\n\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'mat-download-button',\r\n  templateUrl: './mat-download-button.component.html',\r\n  styleUrls: ['./mat-download-button.component.css']\r\n})\r\nexport class MatDownloadButtonComponent {\r\n  @Input() video: HTMLVideoElement;\r\n  @Input() title: string;\r\n\r\n  constructor() { }\r\n\r\n}\r\n","import { Component, EventEmitter, HostListener, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { EventService } from '../../services/event.service';\r\nimport { FullscreenService } from '../../services/fullscreen.service';\r\n\r\n@Component({\r\n  selector: 'mat-fullscreen-button',\r\n  templateUrl: './mat-fullscreen-button.component.html',\r\n  styleUrls: ['./mat-fullscreen-button.component.css']\r\n})\r\nexport class MatFullscreenButtonComponent implements OnInit {\r\n  canFullscreen: boolean = false;\r\n\r\n  @Input() player: HTMLVideoElement;\r\n\r\n  @Input() fullscreen: boolean = false;\r\n\r\n  @Output() fullscreenChanged = new EventEmitter<boolean>();\r\n\r\n  @Input() keyboard: boolean = true;\r\n\r\n  constructor(\r\n    private fscreen: FullscreenService,\r\n    private evt: EventService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    if (this.fscreen.isEnabled())\r\n      this.canFullscreen = true;\r\n\r\n    this.fscreen.onChange(event => this.fscreen.isFullscreen() ? this.onChangesFullscreen(true) : this.onChangesFullscreen(false));\r\n  }\r\n\r\n  setFullscreen(value: boolean) {\r\n    if (this.canFullscreen && this.fullscreen !== value)\r\n      this.toggleFullscreen();\r\n  }\r\n\r\n  toggleFullscreen(): void {\r\n    this.fullscreen = !this.fullscreen;\r\n    this.updateFullscreen();\r\n  }\r\n\r\n  updateFullscreen(): void {\r\n    this.fullscreen ? this.fscreen.request(this.player) : this.fscreen.exit();\r\n    this.fullscreenChanged.emit(this.fullscreen);\r\n  }\r\n\r\n  onChangesFullscreen(value: boolean): void {\r\n    this.fullscreen = value;\r\n    this.fullscreenChanged.emit(this.fullscreen);\r\n  }\r\n\r\n  @HostListener('document:keyup.f', ['$event'])\r\n  onFullscreenKey(event: KeyboardEvent) {\r\n    if (this.keyboard) {\r\n      this.toggleFullscreen();\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n}\r\n","import { AfterViewInit, Component, EventEmitter, HostListener, Input, OnDestroy, Output, Renderer2 } from '@angular/core';\r\n\r\nimport { EventHandler } from '../../interfaces/event-handler.interface';\r\nimport { EventService } from '../../services/event.service';\r\n\r\n@Component({\r\n  selector: 'mat-play-button',\r\n  templateUrl: './mat-play-button.component.html',\r\n  styleUrls: ['./mat-play-button.component.css']\r\n})\r\nexport class MatPlayButtonComponent implements AfterViewInit, OnDestroy {\r\n  @Input() video: HTMLVideoElement;\r\n\r\n  @Input() play: boolean = false;\r\n\r\n  @Output() playChanged = new EventEmitter<boolean>();\r\n\r\n  @Input() keyboard: boolean = true;\r\n\r\n  private events: EventHandler[];\r\n\r\n  constructor(\r\n    private renderer: Renderer2,\r\n    private evt: EventService\r\n  ) { }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.events = [\r\n      { element: this.video, name: 'play', callback: event => this.setVideoPlayback(true), dispose: null },\r\n      { element: this.video, name: 'pause', callback: event => this.setVideoPlayback(false), dispose: null },\r\n      { element: this.video, name: 'durationchange', callback: event => this.setVideoPlayback(false), dispose: null },\r\n      { element: this.video, name: 'ended', callback: event => this.setVideoPlayback(false), dispose: null },\r\n      { element: this.video, name: 'click', callback: event => this.toggleVideoPlayback(), dispose: null }\r\n    ];\r\n\r\n    this.evt.addEvents(this.renderer, this.events);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.evt.removeEvents(this.events);\r\n  }\r\n\r\n  setVideoPlayback(value: boolean) {\r\n    if (this.play !== value)\r\n      this.toggleVideoPlayback();\r\n  }\r\n\r\n  toggleVideoPlayback(): void {\r\n    this.play = !this.play;\r\n    this.updateVideoPlayback();\r\n  }\r\n\r\n  updateVideoPlayback(): void {\r\n    this.play ? this.video.play() : this.video.pause();\r\n    this.playChanged.emit(this.play);\r\n  }\r\n\r\n  @HostListener('document:keyup.space', ['$event'])\r\n  onPlayKey(event: KeyboardEvent) {\r\n    if (this.keyboard) {\r\n      this.toggleVideoPlayback();\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'mat-quality-control',\r\n  templateUrl: './mat-quality-control.component.html',\r\n  styleUrls: ['./mat-quality-control.component.css']\r\n})\r\nexport class MatQualityControlComponent {\r\n  @Input() video: HTMLVideoElement;\r\n\r\n  constructor() { }\r\n\r\n}\r\n","import { AfterViewInit, Component, EventEmitter, Input, OnDestroy, Output, Renderer2 } from '@angular/core';\r\nimport { ThemePalette } from '@angular/material';\r\n\r\nimport { EventHandler } from '../../interfaces/event-handler.interface';\r\nimport { EventService } from '../../services/event.service';\r\n\r\n@Component({\r\n  selector: 'mat-seek-progress-control',\r\n  templateUrl: './mat-seek-progress-control.component.html',\r\n  styleUrls: ['./mat-seek-progress-control.component.css']\r\n})\r\nexport class MatSeekProgressControlComponent implements AfterViewInit, OnDestroy {\r\n  curTimePercent: number = 0;\r\n  bufTimePercent: number = 0;\r\n\r\n  @Input() video: HTMLVideoElement = null;\r\n\r\n  @Input() color: ThemePalette = 'primary';\r\n\r\n  @Input() currentTime: number = 0;\r\n\r\n  @Output() currentTimeChanged = new EventEmitter<number>();\r\n\r\n  @Input() bufferedTime: number = 0;\r\n\r\n  @Output() bufferedTimeChanged = new EventEmitter<number>();\r\n\r\n  private events: EventHandler[];\r\n\r\n  constructor(\r\n    private renderer: Renderer2,\r\n    private evt: EventService\r\n  ) { }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.events = [\r\n      { element: this.video, name: 'seeking', callback: event => this.updateCurrentTime(this.video.currentTime), dispose: null },\r\n      { element: this.video, name: 'canplaythrough', callback: event => this.updateBufferedTime(), dispose: null },\r\n      { element: this.video, name: 'timeupdate', callback: event => this.updateCurrentTime(this.video.currentTime), dispose: null },\r\n      { element: this.video, name: 'progress', callback: event => this.updateBufferedTime(), dispose: null }\r\n    ];\r\n\r\n    this.evt.addEvents(this.renderer, this.events);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.evt.removeEvents(this.events);\r\n  }\r\n\r\n  seekVideo(value: number): void {\r\n    const percentage = value / 100;\r\n    const newTime = this.video.duration * percentage;\r\n    this.video.currentTime = newTime;\r\n  }\r\n\r\n  updateCurrentTime(time: number): void {\r\n    this.currentTime = time;\r\n    this.curTimePercent = this.updateTime(this.currentTimeChanged, this.currentTime);\r\n  }\r\n\r\n  updateBufferedTime(): void {\r\n    if (this.video.buffered.length > 0) {\r\n      let largestBufferValue = 0;\r\n      for (let i = 0; i < this.video.buffered.length; i++) {\r\n        const cur = this.video.currentTime;\r\n        const start = this.video.buffered.start(i);\r\n        const end = this.video.buffered.end(i);\r\n        if (start <= cur && end > cur && (end - start) > largestBufferValue)\r\n          largestBufferValue = end;\r\n      }\r\n      this.bufferedTime = largestBufferValue;\r\n      this.bufTimePercent = this.updateTime(this.bufferedTimeChanged, this.bufferedTime);\r\n    }\r\n  }\r\n\r\n  updateTime(emitter: EventEmitter<number>, time: number): number {\r\n    emitter.emit(time);\r\n    return time / this.video.duration * 100;\r\n  }\r\n\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'mat-time-control',\r\n  templateUrl: './mat-time-control.component.html',\r\n  styleUrls: ['./mat-time-control.component.css']\r\n})\r\nexport class MatTimeControlComponent {\r\n  @Input() video: HTMLVideoElement;\r\n\r\n  constructor() { }\r\n\r\n}\r\n","import { AfterViewInit, Component, Input, OnDestroy, Renderer2 } from '@angular/core';\r\n\r\nimport { EventHandler } from '../../interfaces/event-handler.interface';\r\nimport { EventService } from '../../services/event.service';\r\n\r\n@Component({\r\n  selector: 'mat-video-spinner',\r\n  templateUrl: './mat-video-spinner.component.html',\r\n  styleUrls: [\r\n    './mat-video-spinner.component.scss',\r\n    './indicators/spin.css',\r\n    './indicators/dot.css',\r\n    './indicators/split-ring.css',\r\n    './indicators/hourglass.css'\r\n  ]\r\n})\r\nexport class MatVideoSpinnerComponent implements AfterViewInit, OnDestroy {\r\n  @Input() video: HTMLVideoElement;\r\n  @Input() spinner: string = 'spin';\r\n\r\n  videoBuffering = false;\r\n  videoLoaded = false;\r\n\r\n  private events: EventHandler[] = [];\r\n\r\n  constructor(\r\n    private renderer: Renderer2,\r\n    private evt: EventService\r\n  ) { }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.events = [\r\n      { element: this.video, name: 'loadstart', callback: event => this.videoLoaded = false, dispose: null },\r\n      { element: this.video, name: 'loadedmetadata', callback: event => this.videoLoaded = true, dispose: null },\r\n      { element: this.video, name: 'canplay', callback: event => this.videoBuffering = false, dispose: null },\r\n      { element: this.video, name: 'waiting', callback: event => this.videoBuffering = true, dispose: null },\r\n      { element: this.video, name: 'durationchange', callback: event => this.videoBuffering = true, dispose: null }\r\n    ];\r\n\r\n    this.evt.addEvents(this.renderer, this.events);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.evt.removeEvents(this.events);\r\n  }\r\n\r\n}\r\n","import { Component, EventEmitter, HostListener, Input, Output } from '@angular/core';\r\nimport { ThemePalette } from '@angular/material';\r\n\r\nimport { EventService } from '../../services/event.service';\r\n\r\n@Component({\r\n  selector: 'mat-volume-control',\r\n  templateUrl: './mat-volume-control.component.html',\r\n  styleUrls: ['./mat-volume-control.component.css']\r\n})\r\nexport class MatVolumeControlComponent {\r\n  @Input() video: HTMLVideoElement = null;\r\n\r\n  @Input() color: ThemePalette = 'primary';\r\n\r\n  @Input() volume: number = 1;\r\n\r\n  @Output() volumeChanged = new EventEmitter<number>();\r\n\r\n  @Input() muted: boolean = false;\r\n\r\n  @Output() mutedChanged = new EventEmitter<boolean>();\r\n\r\n  @Input() keyboard: boolean = true;\r\n\r\n  constructor(private evt: EventService) { }\r\n\r\n  setVolume(value: number): void {\r\n    this.volume = value;\r\n    this.video.volume = this.volume;\r\n    this.volumeChanged.emit(this.volume);\r\n\r\n    if (this.volume > 0)\r\n      this.setMuted(false);\r\n  }\r\n\r\n  setMuted(value: boolean): void {\r\n    if (this.muted !== value)\r\n      this.toggleMuted();\r\n  }\r\n\r\n  toggleMuted(): void {\r\n    this.muted = !this.muted;\r\n    this.updateMuted();\r\n  }\r\n\r\n  updateMuted(): void {\r\n    this.video.muted = this.muted;\r\n    this.mutedChanged.emit(this.muted);\r\n  }\r\n\r\n  @HostListener('document:keyup.m', ['$event'])\r\n  onMuteKey(event: KeyboardEvent) {\r\n    if (this.keyboard) {\r\n      this.toggleMuted();\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatButtonModule, MatIconModule, MatSliderModule } from '@angular/material';\r\n\r\nimport { MatVideoSourceDirective } from './directives/mat-video-source.directive';\r\nimport { MatVideoTrackDirective } from './directives/mat-video-track.directive';\r\nimport { MatSliderProgressBarComponent } from './internal/mat-slider-progress-bar/mat-slider-progress-bar.component';\r\nimport { SecondsToTimePipe } from './pipes/seconds-to-time.pipe';\r\nimport { EventService } from './services/event.service';\r\nimport { FullscreenService } from './services/fullscreen.service';\r\nimport { MatDownloadButtonComponent } from './ui/mat-download-button/mat-download-button.component';\r\nimport { MatFullscreenButtonComponent } from './ui/mat-fullscreen-button/mat-fullscreen-button.component';\r\nimport { MatPlayButtonComponent } from './ui/mat-play-button/mat-play-button.component';\r\nimport { MatQualityControlComponent } from './ui/mat-quality-control/mat-quality-control.component';\r\nimport { MatSeekProgressControlComponent } from './ui/mat-seek-progress-control/mat-seek-progress-control.component';\r\nimport { MatTimeControlComponent } from './ui/mat-time-control/mat-time-control.component';\r\nimport { MatVideoSpinnerComponent } from './ui/mat-video-spinner/mat-video-spinner.component';\r\nimport { MatVolumeControlComponent } from './ui/mat-volume-control/mat-volume-control.component';\r\nimport { MatVideoComponent } from './video.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        SecondsToTimePipe,\r\n        MatVideoComponent,\r\n        MatSliderProgressBarComponent,\r\n        MatPlayButtonComponent,\r\n        MatVolumeControlComponent,\r\n        MatDownloadButtonComponent,\r\n        MatFullscreenButtonComponent,\r\n        MatTimeControlComponent,\r\n        MatQualityControlComponent,\r\n        MatVideoSpinnerComponent,\r\n        MatSeekProgressControlComponent,\r\n        MatVideoSourceDirective,\r\n        MatVideoTrackDirective\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        MatIconModule,\r\n        MatButtonModule,\r\n        MatSliderModule\r\n    ],\r\n    exports: [\r\n        MatVideoComponent,\r\n        MatVideoSourceDirective,\r\n        MatVideoTrackDirective\r\n    ],\r\n    providers: [\r\n        FullscreenService,\r\n        EventService\r\n    ]\r\n})\r\nexport class MatVideoModule { }\r\n"],"names":["tslib_1.__values","tslib_1.__extends"],"mappings":";;;;;;;;;;;;IAMI;KAAiB;;;;;;IAEjB,gCAAS;;;;;IAAT,UAAU,QAAmB,EAAE,MAAsB;;gCACtC,OAAK;YACZ,OAAK,CAAC,OAAO,GAAG,QAAQ,CAAC,MAAM,CAAC,OAAK,CAAC,OAAO,EAAE,OAAK,CAAC,IAAI,EAAE,UAAA,QAAQ,IAAI,OAAA,OAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAA,CAAC,CAAC;;;YADrG,KAAoB,IAAA,WAAAA,SAAA,MAAM,CAAA,8BAAA;gBAArB,IAAM,OAAK,mBAAA;wBAAL,OAAK;aACqF;;;;;;;;;KACxG;;;;;IAED,mCAAY;;;;IAAZ,UAAa,MAAsB;;;YAC/B,KAAoB,IAAA,WAAAA,SAAA,MAAM,CAAA,8BAAA;gBAArB,IAAM,OAAK,mBAAA;gBACZ,IAAI,OAAK,CAAC,OAAO;oBACb,OAAK,CAAC,OAAO,EAAE,CAAC;aAAA;;;;;;;;;KAC3B;;gBAdJ,UAAU;;;;IAgBX,mBAAC;CAhBD;;;;;;ACHA;IA4CI,2BACY,QAAmB,EACnB,GAAiB;QADjB,aAAQ,GAAR,QAAQ,CAAW;QACnB,QAAG,GAAH,GAAG,CAAc;QA/BpB,QAAG,GAAW,IAAI,CAAC;QACnB,UAAK,GAAW,IAAI,CAAC;QACrB,aAAQ,GAAY,KAAK,CAAC;QAC1B,YAAO,GAAY,IAAI,CAAC;QACxB,SAAI,GAAY,KAAK,CAAC;QACtB,YAAO,GAAY,IAAI,CAAC;QACxB,eAAU,GAAY,IAAI,CAAC;QAC3B,aAAQ,GAAY,KAAK,CAAC;QAC1B,UAAK,GAAiB,SAAS,CAAC;QAChC,YAAO,GAAW,MAAM,CAAC;QACzB,WAAM,GAAW,IAAI,CAAC;QACtB,aAAQ,GAAY,IAAI,CAAC;QACzB,YAAO,GAAY,IAAI,CAAC;QAEjC,YAAO,GAAY,KAAK,CAAC;QAEzB,iBAAY,GAAY,KAAK,CAAC;QAK9B,gBAAW,GAAG,KAAK,CAAC;QAEZ,kBAAa,GAAY,KAAK,CAAC;QAE/B,yBAAoB,GAAW,IAAI,CAAC;KAOvC;;;;IAEL,2CAAe;;;IAAf;QAAA,iBAUC;QATG,IAAI,CAAC,MAAM,GAAG;YACV,EAAE,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,EAAE,WAAW,EAAE,QAAQ,EAAE,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,WAAW,GAAG,KAAK,GAAA,EAAE,OAAO,EAAE,IAAI,EAAE;YACpH,EAAE,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,EAAE,gBAAgB,EAAE,QAAQ,EAAE,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,GAAA,EAAE,OAAO,EAAE,IAAI,EAAE;YAC7H,EAAE,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,UAAA,KAAK,IAAI,OAAA,OAAO,CAAC,KAAK,CAAC,uBAAuB,EAAE,KAAK,CAAC,GAAA,EAAE,OAAO,EAAE,IAAI,EAAE;YACrI,EAAE,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,EAAE,aAAa,EAAE,QAAQ,EAAE,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,cAAc,EAAE,GAAA,EAAE,OAAO,EAAE,IAAI,EAAE;YACpH,EAAE,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,IAAI,EAAE,WAAW,EAAE,QAAQ,EAAE,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAA,EAAE,OAAO,EAAE,IAAI,EAAE;SACvH,CAAC;QAEF,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;KAClD;;;;IAED,uCAAW;;;IAAX;QACI,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KACtC;;;;IAED,gCAAI;;;IAAJ;QACI,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa;YACtC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;KACvC;;;;IAED,uCAAW;;;IAAX;QACI,OAAO,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,sBAAG,IAAI,CAAC,KAAK,CAAC,aAAa,KAAuB,IAAI,CAAC;KACvG;;;;;IAED,4CAAgB;;;;IAAhB,UAAiB,KAAU;QACvB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,UAAU,CAAC;QACtD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,WAAW,CAAC;QACxD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;KAC3B;;;;;IAED,uCAAW;;;;IAAX,UAAY,KAAU;QAAtB,iBAMC;QALG,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,YAAY,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACtC,IAAI,CAAC,kBAAkB,GAAG,UAAU,CAAC;YACjC,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;SAC9B,EAAE,IAAI,CAAC,oBAAoB,CAAC,CAAC;KACjC;;;;;;IAED,2CAAe;;;;;IAAf,UAAgB,WAAmB,EAAE,aAAqB;QACtD,IAAI,IAAI,CAAC,OAAO,KAAK,IAAI,EAAE;YACvB,OAAO,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,aAAa,IAAI,WAAW,GAAG,aAAa,CAAC;SAC9E;aAAM;YACH,OAAO,IAAI,CAAC,OAAO,GAAG,WAAW,GAAG,aAAa,CAAC;SACrD;KACJ;;gBAxFJ,SAAS,SAAC;oBACP,QAAQ,EAAE,WAAW;oBACrB,k8DAAqC;;iBAExC;;;;gBAVgE,SAAS;gBAIjE,YAAY;;;yBAQhB,SAAS,SAAC,QAAQ;wBAClB,SAAS,SAAC,OAAO;sBAEjB,KAAK;wBACL,KAAK;2BACL,KAAK;0BACL,KAAK;uBACL,KAAK;0BACL,KAAK;6BACL,KAAK;2BACL,KAAK;wBACL,KAAK;0BACL,KAAK;yBACL,KAAK;2BACL,KAAK;0BACL,KAAK;;IAqEV,wBAAC;CA1FD;;;;;;ACNA;IAeE,iCACkB,iBAAoC,EAC5C,EAAc;QADN,sBAAiB,GAAjB,iBAAiB,CAAmB;QAC5C,OAAE,GAAF,EAAE,CAAY;QATf,QAAG,GAAW,IAAI,CAAC;QACnB,SAAI,GAAW,IAAI,CAAC;QAErB,SAAI,GAAG,IAAI,CAAC;QAQlB,IAAI,CAAC,KAAK,GAAG,iBAAiB,CAAC;QAC/B,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,aAAa,CAAC;QAC/B,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;KACnB;;;;;IAED,6CAAW;;;;IAAX,UAAY,OAAsB;QAChC,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QAC3B,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAE7B,IAAI,CAAC,IAAI,CAAC,IAAI;YACZ,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;KACrB;;gBA1BF,SAAS,SAAC;oBACT,QAAQ,EAAE,kBAAkB;iBAC7B;;;;gBAJQ,iBAAiB,uBAcrB,IAAI;gBAhBW,UAAU;;;sBAQ3B,KAAK;uBACL,KAAK;;IAuBR,8BAAC;CA5BD;;;;;;ACJA;IAiBI,gCACoB,iBAAoC,EAC5C,EAAc;QADN,sBAAiB,GAAjB,iBAAiB,CAAmB;QAC5C,OAAE,GAAF,EAAE,CAAY;QAXjB,QAAG,GAAW,IAAI,CAAC;QACnB,SAAI,GAAW,IAAI,CAAC;QACpB,YAAO,GAAW,IAAI,CAAC;QACvB,UAAK,GAAW,IAAI,CAAC;QAEtB,SAAI,GAAG,IAAI,CAAC;QAQhB,IAAI,CAAC,KAAK,GAAG,iBAAiB,CAAC;QAC/B,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,aAAa,CAAC;QAC9B,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;KACrB;;;;;IAED,4CAAW;;;;IAAX,UAAY,OAAsB;QAC9B,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QAC1B,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAC5B,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAClC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAE9B,IAAI,CAAC,IAAI,CAAC,IAAI;YACV,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;KACzB;;gBA9BJ,SAAS,SAAC;oBACP,QAAQ,EAAE,iBAAiB;iBAC9B;;;;gBAJQ,iBAAiB,uBAgBjB,IAAI;gBAlBO,UAAU;;;sBAQzB,KAAK;uBACL,KAAK;0BACL,KAAK;wBACL,KAAK;;IAyBV,6BAAC;CAhCD;;;;;;;;;;ICEI,mBAAmB,GAAG,CAAC;AAE3B;IAsCmDC,iDAAS;IAYxD,uCACI,UAAsB,EACtB,YAA0B,EAC1B,iBAAoC,EACxB,GAAmB,EACR,QAAgB;QAL3C,YAOI,kBAAM,UAAU,EAAE,YAAY,EAAE,iBAAiB,EAAE,GAAG,EAAE,QAAQ,CAAC,SAEpE;QApBQ,UAAI,GAAW,QAAQ,CAAC;QACxB,WAAK,GAAW,CAAC,CAAC;QAKnB,kBAAY,GAAW,CAAC,CAAC;;;;QAGjC,yBAAmB,GAAG,6BAA2B,mBAAmB,EAAI,CAAC;QAUrE,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;;KAC3C;IAjBD,sBACI,sDAAW;;;;;;QADf,cAC4B,OAAO,IAAI,CAAC,YAAY,CAAC,EAAE;;;;;QACvD,UAAgB,CAAS,IAAI,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;;;OADV;IAmBvD,sBAAI,6DAAkB;;;;;;QAAtB;YACI,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ,EAAE;;oBAClB,IAAI,GAAG,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,GAAG;gBACtC,OAAO;oBACH,WAAW,EAAE,cAAY,IAAI,mBAAc,IAAI,SAAI,IAAI,CAAC,YAAY,GAAG,GAAG,MAAG;iBAChF,CAAC;aACL;SACJ;;;OAAA;;gBArEJ,SAAS,SAAC;oBACP,QAAQ,EAAE,yBAAyB;oBACnC,81CAAuD;oBAEvD,SAAS,EAAE,CAAC,yBAAyB,CAAC;oBACtC,IAAI,EAAE;wBACF,SAAS,EAAE,YAAY;wBACvB,QAAQ,EAAE,WAAW;wBACrB,SAAS,EAAE,oDAAoD;;wBAC/D,aAAa,EAAE,4DAA4D;;wBAC3E,WAAW,EAAE,oBAAoB;wBACjC,SAAS,EAAE,YAAY;wBACvB,cAAc,EAAE,iBAAiB;wBACjC,SAAS,EAAE,kBAAkB;wBAC7B,YAAY,EAAE,eAAe;wBAC7B,cAAc,EAAE,uBAAuB;wBACvC,OAAO,EAAE,YAAY;wBACrB,MAAM,EAAE,QAAQ;wBAChB,YAAY,EAAE,UAAU;wBACxB,sBAAsB,EAAE,UAAU;wBAClC,sBAAsB,EAAE,KAAK;wBAC7B,sBAAsB,EAAE,KAAK;wBAC7B,sBAAsB,EAAE,OAAO;wBAC/B,yBAAyB,EAAE,sCAAsC;wBACjE,6BAA6B,EAAE,UAAU;wBACzC,8BAA8B,EAAE,cAAc;wBAC9C,+BAA+B,EAAE,WAAW;wBAC5C,kCAAkC,EAAE,aAAa;wBACjD,4BAA4B,EAAE,YAAY;wBAC1C,wCAAwC,EAAE,YAAY;wBACtD,6BAA6B,EAAE,UAAU;wBACzC,8BAA8B,EAAE,aAAa;wBAC7C,mCAAmC,EAAE,qDAAqD;qBAC7F;oBACD,MAAM,EAAE,CAAC,UAAU,EAAE,OAAO,EAAE,UAAU,CAAC;oBACzC,eAAe,EAAE,uBAAuB,CAAC,MAAM;;iBAClD;;;;gBA5CgD,UAAU;gBAElD,YAAY;gBAFwC,iBAAiB;gBAGrE,cAAc,uBA2Dd,QAAQ;6CACR,SAAS,SAAC,UAAU;;;uBAhBxB,KAAK;wBACL,KAAK;8BAEL,KAAK;;IA4BV,oCAAC;CAAA,CAhCkD,SAAS,GAgC3D;;;;;;;;AAGD,SAAS,KAAK,CAAC,CAAS,EAAE,GAAO,EAAE,GAAS;IAAlB,oBAAA,EAAA,OAAO;IAAE,oBAAA,EAAA,SAAS;IACxC,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;CAC1C;;;;;;ACnFD;IAEA;QAII,UAAK,GAAG;YACJ,IAAI,EAAE,QAAQ;YACd,KAAK,EAAE,OAAO;YACd,GAAG,EAAE,KAAK;YACV,IAAI,EAAE,IAAI;SACb,CAAC;KAoBL;;;;;IAlBG,qCAAS;;;;IAAT,UAAU,OAAe;QACrB,IAAI,CAAC,OAAO;YACR,OAAO,MAAM,CAAC;aACb;;gBACG,WAAW,GAAW,EAAE;YAC5B,KAAK,IAAM,GAAG,IAAI,IAAI,CAAC,KAAK,EAAE;gBAC1B,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE;oBAC3C,WAAW,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,GAAG,GAAG,CAAC;oBACtE,OAAO,GAAG,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;iBAC/E;aACJ;YACD,WAAW,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC,CAAC,QAAQ,EAAE,GAAG,GAAG,CAAC;YACzD,OAAO,GAAG,OAAO,GAAG,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC,CAAC;YAClD,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE;gBAAE,WAAW,IAAI,GAAG,CAAC;YACjD,WAAW,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC;YAC9C,OAAO,WAAW,CAAC;SACtB;KACJ;;gBA5BJ,IAAI,SAAC;oBACF,IAAI,EAAE,eAAe;iBACxB;;IA2BD,wBAAC;CA7BD;;;;;;ACFA;IA2DI;QArDQ,UAAK,GAAe;;YAExB;gBACI,mBAAmB;gBACnB,gBAAgB;gBAChB,mBAAmB;gBACnB,mBAAmB;gBACnB,kBAAkB;gBAClB,iBAAiB;aACpB;;YAED;gBACI,yBAAyB;gBACzB,sBAAsB;gBACtB,yBAAyB;gBACzB,yBAAyB;gBACzB,wBAAwB;gBACxB,uBAAuB;aAE1B;;YAED;gBACI,yBAAyB;gBACzB,wBAAwB;gBACxB,gCAAgC;gBAChC,wBAAwB;gBACxB,wBAAwB;gBACxB,uBAAuB;aAE1B;;YAED;gBACI,sBAAsB;gBACtB,qBAAqB;gBACrB,sBAAsB;gBACtB,sBAAsB;gBACtB,qBAAqB;gBACrB,oBAAoB;aACvB;;YAED;gBACI,qBAAqB;gBACrB,kBAAkB;gBAClB,qBAAqB;gBACrB,qBAAqB;gBACrB,oBAAoB;gBACpB,mBAAmB;aACtB;SACJ,CAAC;QAME,IAAI,CAAC,eAAe,GAAG,OAAO,OAAO,KAAK,WAAW,IAAI,sBAAsB,IAAI,OAAO,CAAC;;YACrF,GAAG,GAAQ,EAAE;;YACf,GAAG;QAEP,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACxC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACpB,IAAI,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,QAAQ,EAAE;gBAC3B,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;;oBAE7B,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;iBAC7C;gBACD,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC;aACjB;SACJ;KACJ;;;;;IAEM,mCAAO;;;;IAAd,UAAe,IAAS;;YACd,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,iBAAiB;QAEzC,IAAI,GAAG,IAAI,IAAI,QAAQ,CAAC,eAAe,CAAC;;;;;QAMxC,IAAI,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE;YAC/C,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;SACnB;aAAM;YACH,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,eAAe,GAAG,oBAAC,OAAO,IAAS,oBAAoB,GAAG,EAAE,CAAC,CAAC;SACpF;KACJ;;;;IAEM,gCAAI;;;IAAX;QACI,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,cAAc,CAAC,EAAE,CAAC;KACtC;;;;;IAEM,kCAAM;;;;IAAb,UAAc,IAAS;QACnB,IAAI,IAAI,CAAC,YAAY,EAAE,EAAE;YACrB,IAAI,CAAC,IAAI,EAAE,CAAC;SACf;aAAM;YACH,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SACtB;KACJ;;;;;IAEM,oCAAQ;;;;IAAf,UAAgB,QAAa;QACzB,QAAQ,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,gBAAgB,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;KACxE;;;;;IAEM,mCAAO;;;;IAAd,UAAe,QAAa;QACxB,QAAQ,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,eAAe,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;KACvE;;;;IAEM,wCAAY;;;IAAnB;QACI,OAAO,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,iBAAiB,CAAC,CAAC,CAAC;KACvD;;;;IAEM,qCAAS;;;IAAhB;;QAEI,OAAO,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,iBAAiB,CAAC,CAAC,CAAC;KACvD;;;;IAEM,sCAAU;;;IAAjB;QACI,OAAO,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,iBAAiB,CAAC,CAAC;KAC9C;;gBAxHJ,UAAU;;;;IA0HX,wBAAC;CA1HD;;;;;;ACHA;IAWE;KAAiB;;gBATlB,SAAS,SAAC;oBACT,QAAQ,EAAE,qBAAqB;oBAC/B,iIAAmD;;iBAEpD;;;;;wBAEE,KAAK;wBACL,KAAK;;IAIR,iCAAC;CAXD;;;;;;ACFA;IAqBE,sCACU,OAA0B,EAC1B,GAAiB;QADjB,YAAO,GAAP,OAAO,CAAmB;QAC1B,QAAG,GAAH,GAAG,CAAc;QAZ3B,kBAAa,GAAY,KAAK,CAAC;QAItB,eAAU,GAAY,KAAK,CAAC;QAE3B,sBAAiB,GAAG,IAAI,YAAY,EAAW,CAAC;QAEjD,aAAQ,GAAY,IAAI,CAAC;KAK7B;;;;IAEL,+CAAQ;;;IAAR;QAAA,iBAKC;QAJC,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;YAC1B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAE5B,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,OAAO,CAAC,YAAY,EAAE,GAAG,KAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,GAAG,KAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,GAAA,CAAC,CAAC;KAChI;;;;;IAED,oDAAa;;;;IAAb,UAAc,KAAc;QAC1B,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,UAAU,KAAK,KAAK;YACjD,IAAI,CAAC,gBAAgB,EAAE,CAAC;KAC3B;;;;IAED,uDAAgB;;;IAAhB;QACE,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;QACnC,IAAI,CAAC,gBAAgB,EAAE,CAAC;KACzB;;;;IAED,uDAAgB;;;IAAhB;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QAC1E,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;KAC9C;;;;;IAED,0DAAmB;;;;IAAnB,UAAoB,KAAc;QAChC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;KAC9C;;;;;IAGD,sDAAe;;;;IADf,UACgB,KAAoB;QAClC,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,KAAK,CAAC,cAAc,EAAE,CAAC;SACxB;KACF;;gBAtDF,SAAS,SAAC;oBACT,QAAQ,EAAE,uBAAuB;oBACjC,wOAAqD;;iBAEtD;;;;gBANQ,iBAAiB;gBADjB,YAAY;;;yBAWlB,KAAK;6BAEL,KAAK;oCAEL,MAAM;2BAEN,KAAK;kCAkCL,YAAY,SAAC,kBAAkB,EAAE,CAAC,QAAQ,CAAC;;IAQ9C,mCAAC;CAxDD;;;;;;ACLA;IAqBE,gCACU,QAAmB,EACnB,GAAiB;QADjB,aAAQ,GAAR,QAAQ,CAAW;QACnB,QAAG,GAAH,GAAG,CAAc;QAVlB,SAAI,GAAY,KAAK,CAAC;QAErB,gBAAW,GAAG,IAAI,YAAY,EAAW,CAAC;QAE3C,aAAQ,GAAY,IAAI,CAAC;KAO7B;;;;IAEL,gDAAe;;;IAAf;QAAA,iBAUC;QATC,IAAI,CAAC,MAAM,GAAG;YACZ,EAAE,OAAO,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAA,EAAE,OAAO,EAAE,IAAI,EAAE;YACpG,EAAE,OAAO,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,GAAA,EAAE,OAAO,EAAE,IAAI,EAAE;YACtG,EAAE,OAAO,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,gBAAgB,EAAE,QAAQ,EAAE,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,GAAA,EAAE,OAAO,EAAE,IAAI,EAAE;YAC/G,EAAE,OAAO,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,GAAA,EAAE,OAAO,EAAE,IAAI,EAAE;YACtG,EAAE,OAAO,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,mBAAmB,EAAE,GAAA,EAAE,OAAO,EAAE,IAAI,EAAE;SACrG,CAAC;QAEF,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;KAChD;;;;IAED,4CAAW;;;IAAX;QACE,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KACpC;;;;;IAED,iDAAgB;;;;IAAhB,UAAiB,KAAc;QAC7B,IAAI,IAAI,CAAC,IAAI,KAAK,KAAK;YACrB,IAAI,CAAC,mBAAmB,EAAE,CAAC;KAC9B;;;;IAED,oDAAmB;;;IAAnB;QACE,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;QACvB,IAAI,CAAC,mBAAmB,EAAE,CAAC;KAC5B;;;;IAED,oDAAmB;;;IAAnB;QACE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QACnD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAClC;;;;;IAGD,0CAAS;;;;IADT,UACU,KAAoB;QAC5B,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAC3B,KAAK,CAAC,cAAc,EAAE,CAAC;SACxB;KACF;;gBA1DF,SAAS,SAAC;oBACT,QAAQ,EAAE,iBAAiB;oBAC3B,uLAA+C;;iBAEhD;;;;gBATwF,SAAS;gBAGzF,YAAY;;;wBAQlB,KAAK;uBAEL,KAAK;8BAEL,MAAM;2BAEN,KAAK;4BAwCL,YAAY,SAAC,sBAAsB,EAAE,CAAC,QAAQ,CAAC;;IAQlD,6BAAC;CA5DD;;;;;;ACLA;IAUE;KAAiB;;gBARlB,SAAS,SAAC;oBACT,QAAQ,EAAE,qBAAqB;oBAC/B,gHAAmD;;iBAEpD;;;;;wBAEE,KAAK;;IAIR,iCAAC;CAVD;;;;;;ACFA;IA6BE,yCACU,QAAmB,EACnB,GAAiB;QADjB,aAAQ,GAAR,QAAQ,CAAW;QACnB,QAAG,GAAH,GAAG,CAAc;QAnB3B,mBAAc,GAAW,CAAC,CAAC;QAC3B,mBAAc,GAAW,CAAC,CAAC;QAElB,UAAK,GAAqB,IAAI,CAAC;QAE/B,UAAK,GAAiB,SAAS,CAAC;QAEhC,gBAAW,GAAW,CAAC,CAAC;QAEvB,uBAAkB,GAAG,IAAI,YAAY,EAAU,CAAC;QAEjD,iBAAY,GAAW,CAAC,CAAC;QAExB,wBAAmB,GAAG,IAAI,YAAY,EAAU,CAAC;KAOtD;;;;IAEL,yDAAe;;;IAAf;QAAA,iBASC;QARC,IAAI,CAAC,MAAM,GAAG;YACZ,EAAE,OAAO,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,iBAAiB,CAAC,KAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAA,EAAE,OAAO,EAAE,IAAI,EAAE;YAC1H,EAAE,OAAO,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,gBAAgB,EAAE,QAAQ,EAAE,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,kBAAkB,EAAE,GAAA,EAAE,OAAO,EAAE,IAAI,EAAE;YAC5G,EAAE,OAAO,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,YAAY,EAAE,QAAQ,EAAE,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,iBAAiB,CAAC,KAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAA,EAAE,OAAO,EAAE,IAAI,EAAE;YAC7H,EAAE,OAAO,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,kBAAkB,EAAE,GAAA,EAAE,OAAO,EAAE,IAAI,EAAE;SACvG,CAAC;QAEF,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;KAChD;;;;IAED,qDAAW;;;IAAX;QACE,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KACpC;;;;;IAED,mDAAS;;;;IAAT,UAAU,KAAa;;YACf,UAAU,GAAG,KAAK,GAAG,GAAG;;YACxB,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,UAAU;QAChD,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,OAAO,CAAC;KAClC;;;;;IAED,2DAAiB;;;;IAAjB,UAAkB,IAAY;QAC5B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;KAClF;;;;IAED,4DAAkB;;;IAAlB;QACE,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;;gBAC9B,kBAAkB,GAAG,CAAC;YAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;;oBAC7C,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW;;oBAC5B,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;oBACpC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;gBACtC,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,KAAK,IAAI,kBAAkB;oBACjE,kBAAkB,GAAG,GAAG,CAAC;aAC5B;YACD,IAAI,CAAC,YAAY,GAAG,kBAAkB,CAAC;YACvC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;SACpF;KACF;;;;;;IAED,oDAAU;;;;;IAAV,UAAW,OAA6B,EAAE,IAAY;QACpD,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnB,OAAO,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC;KACzC;;gBAxEF,SAAS,SAAC;oBACT,QAAQ,EAAE,2BAA2B;oBACrC,kNAAyD;;iBAE1D;;;;gBAV0E,SAAS;gBAI3E,YAAY;;;wBAWlB,KAAK;wBAEL,KAAK;8BAEL,KAAK;qCAEL,MAAM;+BAEN,KAAK;sCAEL,MAAM;;IAuDT,sCAAC;CA1ED;;;;;;ACNA;IAUE;KAAiB;;gBARlB,SAAS,SAAC;oBACT,QAAQ,EAAE,kBAAkB;oBAC5B,mIAAgD;;iBAEjD;;;;;wBAEE,KAAK;;IAIR,8BAAC;CAVD;;;;;;ACFA;IAyBE,kCACU,QAAmB,EACnB,GAAiB;QADjB,aAAQ,GAAR,QAAQ,CAAW;QACnB,QAAG,GAAH,GAAG,CAAc;QATlB,YAAO,GAAW,MAAM,CAAC;QAElC,mBAAc,GAAG,KAAK,CAAC;QACvB,gBAAW,GAAG,KAAK,CAAC;QAEZ,WAAM,GAAmB,EAAE,CAAC;KAK/B;;;;IAEL,kDAAe;;;IAAf;QAAA,iBAUC;QATC,IAAI,CAAC,MAAM,GAAG;YACZ,EAAE,OAAO,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,WAAW,EAAE,QAAQ,EAAE,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,WAAW,GAAG,KAAK,GAAA,EAAE,OAAO,EAAE,IAAI,EAAE;YACtG,EAAE,OAAO,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,gBAAgB,EAAE,QAAQ,EAAE,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,WAAW,GAAG,IAAI,GAAA,EAAE,OAAO,EAAE,IAAI,EAAE;YAC1G,EAAE,OAAO,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,cAAc,GAAG,KAAK,GAAA,EAAE,OAAO,EAAE,IAAI,EAAE;YACvG,EAAE,OAAO,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,cAAc,GAAG,IAAI,GAAA,EAAE,OAAO,EAAE,IAAI,EAAE;YACtG,EAAE,OAAO,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,gBAAgB,EAAE,QAAQ,EAAE,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,cAAc,GAAG,IAAI,GAAA,EAAE,OAAO,EAAE,IAAI,EAAE;SAC9G,CAAC;QAEF,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;KAChD;;;;IAED,8CAAW;;;IAAX;QACE,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KACpC;;gBAvCF,SAAS,SAAC;oBACT,QAAQ,EAAE,mBAAmB;oBAC7B,oFAAiD;;iBAQlD;;;;gBAfoD,SAAS;gBAGrD,YAAY;;;wBAclB,KAAK;0BACL,KAAK;;IA4BR,+BAAC;CAzCD;;;;;;ACLA;IAyBE,mCAAoB,GAAiB;QAAjB,QAAG,GAAH,GAAG,CAAc;QAd5B,UAAK,GAAqB,IAAI,CAAC;QAE/B,UAAK,GAAiB,SAAS,CAAC;QAEhC,WAAM,GAAW,CAAC,CAAC;QAElB,kBAAa,GAAG,IAAI,YAAY,EAAU,CAAC;QAE5C,UAAK,GAAY,KAAK,CAAC;QAEtB,iBAAY,GAAG,IAAI,YAAY,EAAW,CAAC;QAE5C,aAAQ,GAAY,IAAI,CAAC;KAEQ;;;;;IAE1C,6CAAS;;;;IAAT,UAAU,KAAa;QACrB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAChC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAErC,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC;YACjB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;KACxB;;;;;IAED,4CAAQ;;;;IAAR,UAAS,KAAc;QACrB,IAAI,IAAI,CAAC,KAAK,KAAK,KAAK;YACtB,IAAI,CAAC,WAAW,EAAE,CAAC;KACtB;;;;IAED,+CAAW;;;IAAX;QACE,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;QACzB,IAAI,CAAC,WAAW,EAAE,CAAC;KACpB;;;;IAED,+CAAW;;;IAAX;QACE,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAC9B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACpC;;;;;IAGD,6CAAS;;;;IADT,UACU,KAAoB;QAC5B,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,KAAK,CAAC,cAAc,EAAE,CAAC;SACxB;KACF;;gBApDF,SAAS,SAAC;oBACT,QAAQ,EAAE,oBAAoB;oBAC9B,8lBAAkD;;iBAEnD;;;;gBANQ,YAAY;;;wBAQlB,KAAK;wBAEL,KAAK;yBAEL,KAAK;gCAEL,MAAM;wBAEN,KAAK;+BAEL,MAAM;2BAEN,KAAK;4BA4BL,YAAY,SAAC,kBAAkB,EAAE,CAAC,QAAQ,CAAC;;IAQ9C,gCAAC;CAtDD;;;;;;ACLA;IAoBA;KAgC+B;;gBAhC9B,QAAQ,SAAC;oBACN,YAAY,EAAE;wBACV,iBAAiB;wBACjB,iBAAiB;wBACjB,6BAA6B;wBAC7B,sBAAsB;wBACtB,yBAAyB;wBACzB,0BAA0B;wBAC1B,4BAA4B;wBAC5B,uBAAuB;wBACvB,0BAA0B;wBAC1B,wBAAwB;wBACxB,+BAA+B;wBAC/B,uBAAuB;wBACvB,sBAAsB;qBACzB;oBACD,OAAO,EAAE;wBACL,YAAY;wBACZ,aAAa;wBACb,eAAe;wBACf,eAAe;qBAClB;oBACD,OAAO,EAAE;wBACL,iBAAiB;wBACjB,uBAAuB;wBACvB,sBAAsB;qBACzB;oBACD,SAAS,EAAE;wBACP,iBAAiB;wBACjB,YAAY;qBACf;iBACJ;;IAC6B,qBAAC;CAhC/B;;;;;;;;;;;;;;"}
