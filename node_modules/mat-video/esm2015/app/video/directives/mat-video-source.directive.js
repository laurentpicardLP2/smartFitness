/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
import { Directive, ElementRef, Host, Input } from '@angular/core';
import { MatVideoComponent } from '../video.component';
export class MatVideoSourceDirective {
    /**
     * @param {?} matVideoComponent
     * @param {?} el
     */
    constructor(matVideoComponent, el) {
        this.matVideoComponent = matVideoComponent;
        this.el = el;
        this.src = null;
        this.type = null;
        this.init = true;
        this.video = matVideoComponent;
        this.source = el.nativeElement;
        this.init = false;
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    ngOnChanges(changes) {
        this.source.src = this.src;
        this.source.type = this.type;
        if (!this.init)
            this.video.load();
    }
}
MatVideoSourceDirective.decorators = [
    { type: Directive, args: [{
                selector: '[matVideoSource]'
            },] }
];
/** @nocollapse */
MatVideoSourceDirective.ctorParameters = () => [
    { type: MatVideoComponent, decorators: [{ type: Host }] },
    { type: ElementRef }
];
MatVideoSourceDirective.propDecorators = {
    src: [{ type: Input }],
    type: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    MatVideoSourceDirective.prototype.src;
    /** @type {?} */
    MatVideoSourceDirective.prototype.type;
    /** @type {?} */
    MatVideoSourceDirective.prototype.init;
    /** @type {?} */
    MatVideoSourceDirective.prototype.video;
    /** @type {?} */
    MatVideoSourceDirective.prototype.source;
    /** @type {?} */
    MatVideoSourceDirective.prototype.matVideoComponent;
    /** @type {?} */
    MatVideoSourceDirective.prototype.el;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWF0LXZpZGVvLXNvdXJjZS5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9tYXQtdmlkZW8vIiwic291cmNlcyI6WyJhcHAvdmlkZW8vZGlyZWN0aXZlcy9tYXQtdmlkZW8tc291cmNlLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBNEIsTUFBTSxlQUFlLENBQUM7QUFFN0YsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFLdkQsTUFBTSxPQUFPLHVCQUF1Qjs7Ozs7SUFRbEMsWUFDa0IsaUJBQW9DLEVBQzVDLEVBQWM7UUFETixzQkFBaUIsR0FBakIsaUJBQWlCLENBQW1CO1FBQzVDLE9BQUUsR0FBRixFQUFFLENBQVk7UUFUZixRQUFHLEdBQVcsSUFBSSxDQUFDO1FBQ25CLFNBQUksR0FBVyxJQUFJLENBQUM7UUFFckIsU0FBSSxHQUFHLElBQUksQ0FBQztRQVFsQixJQUFJLENBQUMsS0FBSyxHQUFHLGlCQUFpQixDQUFDO1FBQy9CLElBQUksQ0FBQyxNQUFNLEdBQUcsRUFBRSxDQUFDLGFBQWEsQ0FBQztRQUMvQixJQUFJLENBQUMsSUFBSSxHQUFHLEtBQUssQ0FBQztJQUNwQixDQUFDOzs7OztJQUVELFdBQVcsQ0FBQyxPQUFzQjtRQUNoQyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDO1FBQzNCLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUM7UUFFN0IsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJO1lBQ1osSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUN0QixDQUFDOzs7WUExQkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxrQkFBa0I7YUFDN0I7Ozs7WUFKUSxpQkFBaUIsdUJBY3JCLElBQUk7WUFoQlcsVUFBVTs7O2tCQVEzQixLQUFLO21CQUNMLEtBQUs7Ozs7SUFETixzQ0FBNEI7O0lBQzVCLHVDQUE2Qjs7SUFFN0IsdUNBQW9COztJQUNwQix3Q0FBaUM7O0lBQ2pDLHlDQUFrQzs7SUFHaEMsb0RBQW9EOztJQUNwRCxxQ0FBc0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEVsZW1lbnRSZWYsIEhvc3QsIElucHV0LCBPbkNoYW5nZXMsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgTWF0VmlkZW9Db21wb25lbnQgfSBmcm9tICcuLi92aWRlby5jb21wb25lbnQnO1xuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbbWF0VmlkZW9Tb3VyY2VdJ1xufSlcbmV4cG9ydCBjbGFzcyBNYXRWaWRlb1NvdXJjZURpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uQ2hhbmdlcyB7XG4gIEBJbnB1dCgpIHNyYzogc3RyaW5nID0gbnVsbDtcbiAgQElucHV0KCkgdHlwZTogc3RyaW5nID0gbnVsbDtcblxuICBwcml2YXRlIGluaXQgPSB0cnVlO1xuICBwcml2YXRlIHZpZGVvOiBNYXRWaWRlb0NvbXBvbmVudDtcbiAgcHJpdmF0ZSBzb3VyY2U6IEhUTUxTb3VyY2VFbGVtZW50O1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIEBIb3N0KCkgcHJpdmF0ZSBtYXRWaWRlb0NvbXBvbmVudDogTWF0VmlkZW9Db21wb25lbnQsXG4gICAgcHJpdmF0ZSBlbDogRWxlbWVudFJlZlxuICApIHtcbiAgICB0aGlzLnZpZGVvID0gbWF0VmlkZW9Db21wb25lbnQ7XG4gICAgdGhpcy5zb3VyY2UgPSBlbC5uYXRpdmVFbGVtZW50O1xuICAgIHRoaXMuaW5pdCA9IGZhbHNlO1xuICB9XG5cbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQge1xuICAgIHRoaXMuc291cmNlLnNyYyA9IHRoaXMuc3JjO1xuICAgIHRoaXMuc291cmNlLnR5cGUgPSB0aGlzLnR5cGU7XG5cbiAgICBpZiAoIXRoaXMuaW5pdClcbiAgICAgIHRoaXMudmlkZW8ubG9hZCgpO1xuICB9XG5cbn1cbiJdfQ==