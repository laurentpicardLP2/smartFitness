/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
var EventService = /** @class */ (function () {
    function EventService() {
    }
    /**
     * @param {?} renderer
     * @param {?} events
     * @return {?}
     */
    EventService.prototype.addEvents = /**
     * @param {?} renderer
     * @param {?} events
     * @return {?}
     */
    function (renderer, events) {
        var e_1, _a;
        var _loop_1 = function (event_1) {
            event_1.dispose = renderer.listen(event_1.element, event_1.name, function (newEvent) { return event_1.callback(newEvent); });
        };
        try {
            for (var events_1 = tslib_1.__values(events), events_1_1 = events_1.next(); !events_1_1.done; events_1_1 = events_1.next()) {
                var event_1 = events_1_1.value;
                _loop_1(event_1);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (events_1_1 && !events_1_1.done && (_a = events_1.return)) _a.call(events_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
    };
    /**
     * @param {?} events
     * @return {?}
     */
    EventService.prototype.removeEvents = /**
     * @param {?} events
     * @return {?}
     */
    function (events) {
        var e_2, _a;
        try {
            for (var events_2 = tslib_1.__values(events), events_2_1 = events_2.next(); !events_2_1.done; events_2_1 = events_2.next()) {
                var event_2 = events_2_1.value;
                if (event_2.dispose)
                    event_2.dispose();
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (events_2_1 && !events_2_1.done && (_a = events_2.return)) _a.call(events_2);
            }
            finally { if (e_2) throw e_2.error; }
        }
    };
    EventService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    EventService.ctorParameters = function () { return []; };
    return EventService;
}());
export { EventService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXZlbnQuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL21hdC12aWRlby8iLCJzb3VyY2VzIjpbImFwcC92aWRlby9zZXJ2aWNlcy9ldmVudC5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBYSxNQUFNLGVBQWUsQ0FBQztBQUd0RDtJQUdJO0lBQWdCLENBQUM7Ozs7OztJQUVqQixnQ0FBUzs7Ozs7SUFBVCxVQUFVLFFBQW1CLEVBQUUsTUFBc0I7O2dDQUN0QyxPQUFLO1lBQ1osT0FBSyxDQUFDLE9BQU8sR0FBRyxRQUFRLENBQUMsTUFBTSxDQUFDLE9BQUssQ0FBQyxPQUFPLEVBQUUsT0FBSyxDQUFDLElBQUksRUFBRSxVQUFBLFFBQVEsSUFBSSxPQUFBLE9BQUssQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLEVBQXhCLENBQXdCLENBQUMsQ0FBQzs7O1lBRHJHLEtBQW9CLElBQUEsV0FBQSxpQkFBQSxNQUFNLENBQUEsOEJBQUE7Z0JBQXJCLElBQU0sT0FBSyxtQkFBQTt3QkFBTCxPQUFLO2FBQ3FGOzs7Ozs7Ozs7SUFDekcsQ0FBQzs7Ozs7SUFFRCxtQ0FBWTs7OztJQUFaLFVBQWEsTUFBc0I7OztZQUMvQixLQUFvQixJQUFBLFdBQUEsaUJBQUEsTUFBTSxDQUFBLDhCQUFBO2dCQUFyQixJQUFNLE9BQUssbUJBQUE7Z0JBQ1osSUFBSSxPQUFLLENBQUMsT0FBTztvQkFDYixPQUFLLENBQUMsT0FBTyxFQUFFLENBQUM7YUFBQTs7Ozs7Ozs7O0lBQzVCLENBQUM7O2dCQWRKLFVBQVU7Ozs7SUFnQlgsbUJBQUM7Q0FBQSxBQWhCRCxJQWdCQztTQWZZLFlBQVkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlLCBSZW5kZXJlcjIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgRXZlbnRIYW5kbGVyIH0gZnJvbSAnLi4vaW50ZXJmYWNlcy9ldmVudC1oYW5kbGVyLmludGVyZmFjZSc7XHJcblxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBFdmVudFNlcnZpY2Uge1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKCkgeyB9XHJcblxyXG4gICAgYWRkRXZlbnRzKHJlbmRlcmVyOiBSZW5kZXJlcjIsIGV2ZW50czogRXZlbnRIYW5kbGVyW10pOiB2b2lkIHtcclxuICAgICAgICBmb3IgKGNvbnN0IGV2ZW50IG9mIGV2ZW50cylcclxuICAgICAgICAgICAgZXZlbnQuZGlzcG9zZSA9IHJlbmRlcmVyLmxpc3RlbihldmVudC5lbGVtZW50LCBldmVudC5uYW1lLCBuZXdFdmVudCA9PiBldmVudC5jYWxsYmFjayhuZXdFdmVudCkpO1xyXG4gICAgfVxyXG5cclxuICAgIHJlbW92ZUV2ZW50cyhldmVudHM6IEV2ZW50SGFuZGxlcltdKTogdm9pZCB7XHJcbiAgICAgICAgZm9yIChjb25zdCBldmVudCBvZiBldmVudHMpXHJcbiAgICAgICAgICAgIGlmIChldmVudC5kaXNwb3NlKVxyXG4gICAgICAgICAgICAgICAgZXZlbnQuZGlzcG9zZSgpO1xyXG4gICAgfVxyXG5cclxufVxyXG4iXX0=