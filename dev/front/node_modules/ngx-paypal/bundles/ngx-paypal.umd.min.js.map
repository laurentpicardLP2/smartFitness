{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://ngx-paypal/lib/services/script.service.ts","ng://ngx-paypal/lib/services/paypal-script.service.ts","ng://ngx-paypal/lib/components/paypal.component.ts","ng://ngx-paypal/lib/ngx-paypal.module.ts"],"names":["__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","ScriptService","zone","this","prototype","registerScript","url","globalVar","onReady","_this","run","scriptElem","document","createElement","id","getElemId","innerHTML","onload","src","async","defer","getElementsByTagName","appendChild","cleanup","undefined","elem","getElementById","removeChild","Injectable","NgZone","PayPalScriptService","scriptService","paypalWindowName","registerPayPalScript","config","getUrlForConfig","params","name","clientId","currency","commit","extraParams","apply","__spread","arguments","length","concat","getQueryString","queryParams","queryString","queryParam","NgxPaypalComponent","paypalScriptService","scriptLoaded","EventEmitter","ngUnsubscribe","Subject","initializePayPal","Object","defineProperty","content","payPalButtonContainerElem","ngOnChanges","changes","payPalButtonContainerId","generateElementId","initPayPalScript","payPal","doPayPalCheck","ngOnDestroy","complete","ngAfterViewInit","customInit","nativeElement","initPayPal","advanced","extraQueryParams","paypal","Date","valueOf","Buttons","style","createOrder","data","actions","createOrderOnClient","createOrderOnServer","Error","order","create","onApprove","authorizeOnServer","onClientAuthorization","capture","then","details","onError","onCancel","onShippingChange","onClick","render","Component","args","changeDetection","ChangeDetectionStrategy","OnPush","selector","template","Input","Output","ViewChild","NgxPayPalModule","NgModule","imports","CommonModule","declarations","exports","providers"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable, NgZone } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class ScriptService {\r\n\r\n    constructor(\r\n        protected zone: NgZone,\r\n    ) {\r\n    }\r\n\r\n    registerScript(url: string, globalVar: string, onReady: (globalVar: any) => void): void {\r\n        if ((window as any)[globalVar]) {\r\n            // global variable is present = script was already loaded\r\n            this.zone.run(() => {\r\n                onReady((window as any)[globalVar]);\r\n            });\r\n            return;\r\n        }\r\n\r\n        // prepare script elem\r\n        const scriptElem = document.createElement('script');\r\n        scriptElem.id = this.getElemId(globalVar);\r\n        scriptElem.innerHTML = '';\r\n        scriptElem.onload = () => {\r\n            this.zone.run(() => {\r\n                onReady((window as any)[globalVar]);\r\n            });\r\n        };\r\n        scriptElem.src = url;\r\n        scriptElem.async = true;\r\n        scriptElem.defer = true;\r\n\r\n        // add script to header\r\n        document.getElementsByTagName('head')[0].appendChild(scriptElem);\r\n    }\r\n\r\n    cleanup(url: string, globalVar: string): void {\r\n        (window as any)[globalVar] = undefined;\r\n        (window as any)[url] = undefined;\r\n\r\n        // remove script from DOM\r\n        const elem = document.getElementById(this.getElemId(globalVar));\r\n\r\n        if (elem) {\r\n            document.removeChild(elem);\r\n        }\r\n    }\r\n\r\n    private getElemId(globalVar: string): string {\r\n        return `ngx-paypal-script-elem-${globalVar}`;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { IPayPalUrlConfig, IQueryParam } from '../models/paypal-models';\r\nimport { ScriptService } from './script.service';\r\n\r\n@Injectable()\r\nexport class PayPalScriptService {\r\n\r\n    private readonly paypalWindowName = 'paypal';\r\n\r\n\r\n    constructor(\r\n        protected scriptService: ScriptService,\r\n    ) {\r\n    }\r\n\r\n    registerPayPalScript(config: IPayPalUrlConfig, onReady: (payPalApi: any) => void): void {\r\n        this.scriptService.registerScript(this.getUrlForConfig(config), this.paypalWindowName, onReady);\r\n    }\r\n\r\n    private getUrlForConfig(config: IPayPalUrlConfig): string {\r\n        const params: IQueryParam[] = [\r\n            {\r\n                name: 'client-id',\r\n                value: config.clientId\r\n            }\r\n        ];\r\n\r\n        if (config.currency) {\r\n            params.push({\r\n                name: 'currency',\r\n                value: config.currency\r\n            });\r\n        }\r\n\r\n        if (config.commit) {\r\n            params.push({\r\n                name: 'commit',\r\n                value: config.commit\r\n            });\r\n        }\r\n\r\n        if (config.extraParams) {\r\n            params.push(...config.extraParams);\r\n        }\r\n\r\n        return `https://www.paypal.com/sdk/js${this.getQueryString(params)}`;\r\n    }\r\n\r\n    private getQueryString(queryParams: IQueryParam[]): string {\r\n        let queryString = '';\r\n\r\n        for (let i = 0; i < queryParams.length; i++) {\r\n            const queryParam = queryParams[i];\r\n            if (i === 0) {\r\n                queryString += '?';\r\n            } else {\r\n                queryString += '&';\r\n            }\r\n\r\n            queryString += `${queryParam.name}=${queryParam.value}`;\r\n        }\r\n\r\n        return queryString;\r\n    }\r\n}\r\n","import {\r\n    AfterViewInit,\r\n    ChangeDetectionStrategy,\r\n    Component,\r\n    ElementRef,\r\n    EventEmitter,\r\n    Input,\r\n    OnChanges,\r\n    OnDestroy,\r\n    Output,\r\n    SimpleChanges,\r\n    ViewChild,\r\n} from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\nimport {\r\n    ICancelCallbackData,\r\n    IClientAuthorizeCallbackData,\r\n    ICreateOrderCallbackActions,\r\n    IOnApproveCallbackActions,\r\n    IOnApproveCallbackData,\r\n    IOnShippingChangeActions,\r\n    IOnShippingChangeData,\r\n    IPayPalConfig,\r\n} from '../models/paypal-models';\r\nimport { PayPalScriptService } from '../services/paypal-script.service';\r\n\r\n@Component({\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    selector: 'ngx-paypal',\r\n    template: `\r\n    <div #payPalButtonContainer [id]=\"payPalButtonContainerId\"></div>\r\n    `\r\n})\r\nexport class NgxPaypalComponent implements OnChanges, OnDestroy, AfterViewInit {\r\n\r\n    /**\r\n     * Configuration for paypal.\r\n     */\r\n    @Input() config?: IPayPalConfig;\r\n\r\n    /**\r\n     * If enabled, paypal SDK script will be loaded. Useful if you want to have multiple PayPal components on the same page\r\n     * sharing base configuration. In such a case only a single component may register script.\r\n     */\r\n    @Input() registerScript: boolean = true;\r\n\r\n    /**\r\n     * Emitted when paypal script is loaded\r\n     */\r\n    @Output() scriptLoaded = new EventEmitter<any>();\r\n\r\n    /**\r\n     * Id of the element where PayPal button will be rendered\r\n     */\r\n    public payPalButtonContainerId?: string;\r\n\r\n    private readonly ngUnsubscribe: Subject<void> = new Subject<void>();\r\n\r\n    private payPalButtonContainerElem?: ElementRef;\r\n    @ViewChild('payPalButtonContainer') set payPalButtonContainer(content: ElementRef) {\r\n        this.payPalButtonContainerElem = content;\r\n    }\r\n\r\n    /**\r\n     * Flag that indicates if paypal should be initialized (required for handling script load events and availability of DOM element)\r\n     */\r\n    private initializePayPal: boolean = true;\r\n\r\n    /**\r\n     * Reference to PayPal global API\r\n     */\r\n    private payPal: any;\r\n\r\n    constructor(\r\n        private paypalScriptService: PayPalScriptService,\r\n    ) {\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (!this.payPalButtonContainerId) {\r\n            this.payPalButtonContainerId = this.generateElementId();\r\n        }\r\n\r\n        // init when config once its available\r\n        const config = this.config;\r\n        if (config && this.registerScript) {\r\n            this.initPayPalScript(config, (payPal) => {\r\n                // store reference to paypal global script\r\n                this.payPal = payPal;\r\n                this.doPayPalCheck();\r\n            });\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.ngUnsubscribe.next();\r\n        this.ngUnsubscribe.complete();\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.doPayPalCheck();\r\n    }\r\n\r\n    customInit(payPal: any): void {\r\n        this.payPal = payPal;\r\n        this.doPayPalCheck();\r\n    }\r\n\r\n    private doPayPalCheck(): void {\r\n        if (this.initializePayPal && this.config && this.payPal && this.payPalButtonContainerElem) {\r\n            // make sure that id is also set\r\n            if (this.payPalButtonContainerElem.nativeElement.id) {\r\n                this.initializePayPal = false;\r\n                this.initPayPal(this.config, this.payPal);\r\n            }\r\n        }\r\n    }\r\n\r\n    private initPayPalScript(config: IPayPalConfig, initPayPal: (paypal: any) => void): void {\r\n        this.paypalScriptService.registerPayPalScript({\r\n            clientId: config.clientId,\r\n            commit: config.advanced && config.advanced.commit ? config.advanced.commit : undefined,\r\n            currency: config.currency,\r\n            extraParams: config.advanced && config.advanced.extraQueryParams ? config.advanced.extraQueryParams : []\r\n        }, (paypal) => {\r\n            this.scriptLoaded.next(paypal);\r\n            initPayPal(paypal);\r\n        });\r\n    }\r\n\r\n    private generateElementId(): string {\r\n        return `ngx-captcha-id-${new Date().valueOf()}`;\r\n    }\r\n\r\n    private initPayPal(config: IPayPalConfig, paypal: any): void {\r\n        // https://developer.paypal.com/docs/checkout/integrate/#2-add-the-paypal-script-to-your-web-page\r\n        paypal.Buttons({\r\n            style: config.style,\r\n            createOrder: (data: any, actions: ICreateOrderCallbackActions) => {\r\n                if (config.createOrderOnClient && config.createOrderOnServer) {\r\n                    throw Error(`Both 'createOrderOnClient' and 'createOrderOnServer' are defined.\r\n                        Please choose one or the other.`);\r\n                }\r\n\r\n                if (!config.createOrderOnClient && !config.createOrderOnServer) {\r\n                    throw Error(`Neither 'createOrderOnClient' or 'createOrderOnServer' are defined.\r\n                        Please define one of these to create order.`);\r\n                }\r\n\r\n                if (config.createOrderOnClient) {\r\n                    return actions.order.create(config.createOrderOnClient(data));\r\n                }\r\n\r\n                if (config.createOrderOnServer) {\r\n                    return config.createOrderOnServer(data);\r\n                }\r\n\r\n                throw Error(`Invalid state for 'createOrder'.`);\r\n            },\r\n\r\n            onApprove: (data: IOnApproveCallbackData, actions: IOnApproveCallbackActions) => {\r\n                if (config.onApprove) {\r\n                    config.onApprove(data, actions);\r\n                }\r\n\r\n                // capture on server\r\n                if (config.authorizeOnServer) {\r\n                    return config.authorizeOnServer(data, actions);\r\n                }\r\n\r\n                // capture on client\r\n                const onClientAuthorization = config.onClientAuthorization;\r\n                if (onClientAuthorization) {\r\n                    actions.order.capture().then((details: IClientAuthorizeCallbackData) => {\r\n                        onClientAuthorization(details);\r\n                    });\r\n                    return;\r\n                }\r\n            },\r\n\r\n            onError: (error: any) => {\r\n                if (config.onError) {\r\n                    config.onError(error);\r\n                }\r\n            },\r\n\r\n            onCancel: (data: ICancelCallbackData, actions: any) => {\r\n                if (config.onCancel) {\r\n                    config.onCancel(data, actions);\r\n                }\r\n            },\r\n            onShippingChange: (data: IOnShippingChangeData, actions: IOnShippingChangeActions) => {\r\n                if (config.onShippingChange) {\r\n                    return config.onShippingChange(data, actions);\r\n                }\r\n            },\r\n            onClick: () => {\r\n                if (config.onClick) {\r\n                    config.onClick();\r\n                }\r\n            },\r\n        }).render(`#${this.payPalButtonContainerId}`);\r\n    }\r\n}\r\n\r\n\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { NgxPaypalComponent } from './components/paypal.component';\r\nimport { ScriptService } from './services/script.service';\r\nimport { PayPalScriptService } from './services/paypal-script.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [\r\n    NgxPaypalComponent,\r\n  ],\r\n  exports: [\r\n    NgxPaypalComponent,\r\n  ],\r\n  providers: [\r\n    ScriptService,\r\n    PayPalScriptService\r\n  ]\r\n})\r\nexport class NgxPayPalModule {\r\n}\r\n\r\n\r\n"]}