/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package laurent.fitness;

import java.io.IOException;
import java.net.MalformedURLException;
import java.sql.SQLException;
import java.time.LocalDate;
import java.util.Date;

import javax.persistence.EntityManager;
import javax.persistence.ParameterMode;
import javax.persistence.StoredProcedureQuery;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.CommandLineRunner;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;

import laurent.fitness.model.Authority;
import laurent.fitness.model.Customer;
import laurent.fitness.model.Facility;
import laurent.fitness.model.FacilityCategory;
import laurent.fitness.model.Room;
import laurent.fitness.model.Staff;
import laurent.fitness.model.User;
import laurent.fitness.repository.AuthorityRepository;
import laurent.fitness.repository.CustomerRepository;
import laurent.fitness.repository.FacilityCategoryRepository;
import laurent.fitness.repository.FacilityRepository;
import laurent.fitness.repository.RoomRepository;
import laurent.fitness.repository.StaffRepository;
import laurent.fitness.repository.UserRepository;



@SpringBootApplication
public class Fitness implements CommandLineRunner {
	
	@Autowired
	private EntityManager entityManager;
	
    public boolean someLibraryMethod() {
        return true;
    }



	public static void main(String[] args) throws Exception, MalformedURLException, IOException, ClassNotFoundException, SQLException {
		SpringApplication.run(Fitness.class, args);
	}

	@Override
	public void run(String... args)
			throws Exception,  MalformedURLException, IOException, ClassNotFoundException, SQLException {
		
//		StoredProcedureQuery storedProcedure = entityManager.createStoredProcedureQuery("proc_insert_data");
//	    storedProcedure.execute();
//	    
//	    //storedProcedureEnd permet de savoir quand est-ce que l'import est fini
//	    StoredProcedureQuery storedProcedureEnd = entityManager.createStoredProcedureQuery("proc_insert_end");
//	    storedProcedureEnd.execute();
	    
//		

	}
	
	
    
}
